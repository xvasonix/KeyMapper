{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to  Key Mapper Documentation","text":"<p>MAINTENANCE NOTICE!</p> <p>Feature development has stopped.</p> <p>Key Mapper is a free and open source Android app that can map single or multiple key events to a custom action. </p> <p> </p> <p>This wiki aims to provide users with a comprehensive guide to using and setting up Key Mapper for typical implementations. For specific help with more complicated key maps or if this wiki does not answer your questions, you can join the Key Mapper Discord support server and ask for help.</p> <p>Get help  Support the project  Share your key maps </p>"},{"location":"#translations","title":"Translations","text":""},{"location":"#star-history","title":"Star History","text":""},{"location":"#our-team","title":"Our team \ud83e\uddd1\u200d\ud83d\udcbb","text":""},{"location":"#developers","title":"Developers","text":"<ul> <li>Seth Schroeder (sds100): Lead developer who started the project.</li> <li>Tino W. (pixel-shock): Created the actions for swiping and pinching.</li> </ul>"},{"location":"#community-moderatorssupport","title":"Community moderators/support","text":"<ul> <li>Jack Ambler (jambl3r)</li> <li>GL513</li> </ul>"},{"location":"#translators","title":"Translators","text":"<ul> <li>HowToWhy (Czech)</li> <li>Katie Frogs (Polish)</li> <li>Dar\u00edo B. C. (@bydariogamer) (Spanish)</li> </ul>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#becoming-a-tester","title":"Becoming a tester","text":"<p>You can get the apks for the pre-release versions in 2 ways:</p> <ol> <li>Join the Discord server and download the apks from the #testing-builds channel.</li> <li> <p>Download the apk from GitHub Actions. This requires a GitHub account.     You can get alpha builds here and beta builds here.</p> <p>Click on a 'workflow run' and then scroll down to see the 'artifacts'. If a build was successful then you can find the apk here.</p> </li> </ol> <p>Info</p> <p>All testing builds have <code>.ci.X</code> at the end of the version name where 'X' is a number is incremented every time a new build is made. Builds are made when a new feature or bug fix is implemented.</p> <p>There are two types of pre-release versions:</p> <ul> <li>Alpha.  These have \".alpha\" in the version name and are the most unstable. Expect the most crashes and broken features in these builds. BEWARE! Your data in Key Mapper isn't considered compatible between alpha builds so it is possible that Key Mapper will crash and refuse to fix itself.</li> <li>Beta. These builds have some of the latest features and contain a few bugs. You can safely update between versions. These have \".beta.X\" in the version name. These are pre-release builds for the the open-testing channel on Google Play and F-droid always has beta builds. When all known bugs are fixed a new build is released to the app stores.</li> </ul>"},{"location":"contributing/#how-can-i-help","title":"How can I help?","text":"<ul> <li>Test and experiment new features. All features and bug-fixes that are being worked on for a release can be found on the Projects page here.</li> <li>If you find any bugs or crashes then report them by following the guide here.</li> </ul>"},{"location":"contributing/#contributing-code","title":"Contributing code","text":""},{"location":"contributing/#setting-up-the-environment","title":"Setting up the environment","text":"<ol> <li>Fork the KeyMapper repository (repo).</li> <li>Clone the repo to your device. It will clone to a folder called KeyMapper by default.</li> <li>Install Android Studio if you don't have it already. It is available for Windows, Linux and macOS.</li> <li>Open the cloned KeyMapper folder in Android Studio. Install anything Android Studio prompts you to install. E.g the gradle wrapper version used by KeyMapper or older Android SDK versions.</li> <li>Create a new branch off develop which begins with \"feature/\" if it is a new feature or \"fix/\" if it is a bug fix. Then put a brief description of the feature/bug fix.</li> <li>Make any changes then commit them to your forked repo then make a pull request!</li> </ol> <p>Info</p> <p>To build the documentation website you need to install mkdocs-material with Python. Just run <code>pip install -r requirements.txt</code> in the root of the project to install it. Then run <code>mkdocs serve</code> in the project root.</p>"},{"location":"contributing/#introduction-to-the-structure","title":"Introduction to the structure","text":"<p>This app follows something inspired from Clean Architecture and package-by-feature.</p>"},{"location":"contributing/#architecture","title":"Architecture","text":"<p>All data structures that are persisted are passed around as one of two objects:</p> <ol> <li> <p>Non-Entity. This models the data in a way that makes the code more readable and doing the business logic easier. There are no rules for how these need to be named. They should be named what they are. E.g KeyMap, Action, Constraint.</p> </li> <li> <p>Entity. This models how the data should be stored. The class name has an ...Entity suffix. E.g KeyMapEntity. The data is more optimised for storing and the code required to get the data from these models isn't very concise or elegant. The developer took some strange decisions in the first versions of this app. \ud83d\ude06</p> </li> </ol> <p>Every screen in the app has a view model and the view model interacts with one or multiple use cases (more below). The view model converts data that needs to be shown to the user into something that can populate the user interface. For example, the data values in the Action object isn't very useful to the user so this needs to be converted into strings and images that do mean something to the user. All the view models have a ResourceProvider dependency which is how they get strings, Drawables and colours from the resources without having to use a Context. This isn't a problem for configuration changes (e.g locale change) because the activity is recreated, which means all the resources are re-fetched in the view model.</p> <p>The use cases contains all the business logic in the app. A use case  interacts with the adapters and repositories mentioned below. A use case is made for everything that can be done in the app. E.g configuring a key map, displaying a mapping, configuring settings, onboarding the user. Most use cases correspond to something that the user can do in the app but some do not because they contain complicated code that is used in multiple use cases. E.g the GetActionErrorUseCase which determines if an action can be performed successfully.</p> <p>Adapters and repositories contain all interactions with the Android framework (except UI stuff). This is so that tests can be more easily written and executed. Android often changes what apps are allowed to do and how so abstracting these interactions away means the code only needs to be changed in a single place. This means that the only place that a Context object is used is in Services, Activities, Fragments and the adapters.</p>"},{"location":"contributing/#package-by-feature","title":"Package by feature","text":"<p>Every package contains files related to each other. For example, everything (view models, fragments, use cases) to do with constraints is stored in one package. The only package which isn't a feature is the <code>data</code> package because it is useful to have some of the things in there together, e.g the migrations. The <code>system</code> package bundles all the packages which are related to the Android framework because there are so many.</p> <p></p>"},{"location":"contributing/#branches","title":"Branches \ud83c\udf34","text":"<ul> <li>master: Everything in the latest stable release.</li> <li> <p>develop: The most recent changes. The app is potentially unstable but it can be successfully compiled. A new release is branched off of here. </p> </li> <li> <p>release/*: Branched off develop if it is a new large release (e.g 2.4.0), otherwise it is branched off master for bug fix releases (e.g 2.3.1). Beta releases for a particular release are built from here. Once the code is stable, it will be merged into master. No big changes should be made/merged here as the purpose of this branch is to make a release stable. By separating upcoming releases from develop, new features can be worked on in develop without affecting the upcoming release's code base.</p> </li> <li>feature/*: Any new changes currently being developed. Merges into develop.</li> <li>fix/*: A bug fix. This branch should be merged into a release branch and develop.</li> </ul>"},{"location":"contributing/#committing","title":"Committing","text":"<p>Format: <pre><code>&lt;issue id&gt; &lt;type&gt;: &lt;subject&gt;\n</code></pre></p> <p>Every feature or bug fix commit should have an issue associated with it. This is a cue for the developer to plan what they are doing which improves efficiency. A feature should be split up into multiple tasks and each task should have its own commit. The feature should be developed on a separate branch and then merged into develop.</p>"},{"location":"contributing/#example","title":"Example","text":"<pre><code>#100 feat: This a new feature\n</code></pre>"},{"location":"contributing/#types","title":"Types","text":"<ul> <li>feat: a new feature</li> <li>fix: a bug fix</li> <li>docs: changes to documentation</li> <li>style: formatting, missing semi colons, etc; no code change</li> <li>refactor: refactoring production code</li> <li>test: adding tests, refactoring test; no production code change</li> <li>chore: updating build tasks, package manager configs, version name changes, etc; no production code change</li> <li>release: a new release.</li> <li>website: stuff to do with the website.</li> </ul> <p>The README, License, Credits, Changelog and Privacy Policy files should just be changed in the master branch.</p>"},{"location":"contributing/#versioning","title":"Versioning","text":"<p>This project uses semantic versioning. e.g 1.2.3-alpha.01</p> <ul> <li>1st digit: major release. Only incremented when a big enough change happens to the project.</li> <li>2nd digit: minor releases. Incremented when a new feature or a few are added.</li> <li>3rd digit: patches. Incrememtend after a hotfix or bug fix.</li> </ul> <p>Additional labels can be used as a suffix. e.g \"alpha\".</p> <p>The version code in the develop branch should always be the highest. Therefore, when a new version is released in the release branch, it should be incremented as well.</p>"},{"location":"contributing/#releasing","title":"Releasing","text":"<p>Fastlane is used to partially automate the releasing process. Follow the guide on the Fastlane website to set it up.</p>"},{"location":"contributing/#beta-releases","title":"Beta releases","text":""},{"location":"contributing/#only-for-the-first-beta-release","title":"Only for the first beta release","text":"<ol> <li>Branch off develop into a new release branch (e.g release/2.3.0).</li> <li>Change the version name and version code in <code>version.properties</code> in the release branch.</li> <li>Change the version name and version code in <code>version.properties</code> in the develop branch to be one version ahead of the release branch.</li> </ol>"},{"location":"contributing/#for-every-release","title":"For every release","text":"<ol> <li>Manually edit CHANGELOG.md in the develop branch with all changes. Cherry pick this into the release branch.</li> <li>Open the KeyMapper folder in a terminal and run <code>fastlane beta</code>.</li> <li>Squash and merge the release branch into master. Then delete the release branch.</li> </ol>"},{"location":"contributing/#production-releases","title":"Production releases","text":"<ol> <li>Check that all translations are merged.</li> <li>Credit the translators in the About screen in the app and in the index.md on the documentation website.</li> <li>Manually edit CHANGELOG.md in the develop branch with all changes. Cherry pick this into the release branch.</li> <li>Open the KeyMapper folder in a terminal and run <code>fastlane prod</code>. This will release the production build to the    open-testing track on Google Play. Once it is approved by Google Play you must promote the release from open testing    to the production track in Google Play.</li> <li>Squash and merge the release branch into master. Then delete the release branch.</li> </ol>"},{"location":"contributing/#code-style","title":"Code Style","text":"<p>Follow Google's Kotlin style guide. https://developer.android.com/kotlin/style-guide</p>"},{"location":"contributing/#translating","title":"Translating \ud83c\udf0d","text":"<p>You can translate this project on the CrowdIn page. Translations will be merged into production once they are &gt;50% translated. If your language isn't available on the CrowdIn page then contact the developer so we can add it. Our contact details are in the footer of every page on this site.</p> <p>We really appreciate translators so thank you! \ud83d\ude42</p>"},{"location":"contributing/#consistency-standards","title":"Consistency Standards","text":""},{"location":"contributing/#writing","title":"Writing","text":"<p>It is important to use consistent language within the app's code and documentation. Make sure that your submissions comply with these standards. If you have noticed inconsistencies you can alert the developer with an issue or in the Discord. These standards don't need to be followed in places other than the documentation and source code. Follow this Material Design guide.</p>"},{"location":"contributing/#case","title":"Case","text":"<p>No title case unless it is the title of a webpage, section heading. No title case in the string resources in the source code at all.</p> <p>Here are words and phrases that have been spelt inconsistently by the developer and everyone should follow these guidelines. </p> Terminology Correct \ud83d\ude0d Incorrect \ud83d\udc7f The app's name. Key MapperUse Keyboard/Button Mapper when advertising the app as this is how it appears in the app stores. You can use \"Key Mapper\" in the rest of the advert since this is much shorter. key mapper, keymapper A key map key map. KeyMap, keyMap in variable and class names. keymap, Key Map. key-map. Key-Map. A trigger trigger Trigger An action action Action A constraint constraint Constraint A key event key event Key Event, keyevent A key code key code. In variable and class names it should be keyCode instead of keycode. keycode, Key Code A home screen home screen homescreen, Home Screen A backup/ to back up Noun: backup. Verb; back up Backup when using the verb."},{"location":"contributing/#documentation","title":"Documentation","text":""},{"location":"contributing/#headings","title":"Headings","text":"<p>If a heading is for a particular feature then it should include the minimum supported Key Mapper version except version 2.0.</p> <p>E.g \"Trigger When Screen is Off (ROOT, 2.1.0+, Android 8.1+)\" or \"A feature (up to Android 10)\".</p>"},{"location":"faq/","title":"FAQ","text":"<p>This page serves to answer frequently asked questions about Key Mapper, and help solve any problems you may be facing. See the Quick Start Guide for more general help with using Key Mapper.</p>"},{"location":"faq/#can-i-remap-joysticksdpadmouse-buttonsmouse-motion","title":"\"Can I remap joysticks/dpad/mouse buttons/mouse motion?\"","text":"<p>No. Here is why:</p> <p>Joysticks are complicated to remap because they are axes, so their inputs are a range depending on how much you press the stick. It would be a lot of work to integrate them into Key Mapper. Currently, the developer cannot implement this feature. See here for more information. </p> <p>The D-pad is interpreted differently by Android to other keys. That makes it hard to remap. However, the developer has found a way that might be able to remap them. Therefore, you can consider this a planned feature.</p> <p>Mouse buttons are not possible to remap with an accessibility service. There will never be support for them in this app. If other apps can do it, they do not work the same way Key Mapper does. If you want to remap mouse buttons, do not use Key Mapper.</p> <p>Remapping the movement of the mouse isn't possible on unrooted Android. The developer doesn't know of a way to do this.</p>"},{"location":"faq/#key-mapper-keeps-randomly-stoppingcrashingbuggingfreezing","title":"\"Key Mapper keeps randomly stopping/crashing/bugging/freezing\"","text":"<p>Please follow the following steps:</p> <ul> <li> <p>Turn off battery and memory optimisations in your device settings. This is especially important for Huawei and Xiaomi devices, and devices with 2GB of RAM or less. You can read about how to do this on your particular device at dontkillmyapp.com</p> </li> <li> <p>Reboot your device. This is important for everyone to do if you are experiencing an issue with the app stopping. You must try rebooting your device. It works most of the time.</p> </li> </ul> <p>If you have tried BOTH steps and Key Mapper still stops working randomly, consider how you are using the app. If you have low-end hardware, and are playing a game while using repeating key maps, it's probably not a bug. It's probably just too much for your device. If you think you are using Key Mapper in a reasonable way and still experience random crashes, ask about it in the discord server.</p>"},{"location":"faq/#how-do-i-change-the-keyboard","title":"\"How do I change the keyboard?\"","text":"<p>There are multiple ways to do this.</p> <ul> <li>Tap the keyboard button at the bottom of your display when you are typing something. Not all devices have this and some devices have this feature hidden behind a setting somewhere.</li> <li>Tap the notification that allows you to change the keyboard when you are typing something. Not all devices have this.</li> <li>Open Key Mapper and tap \"show input method picker\" in the menu .</li> </ul> <p>Tip</p> <p>If you want to switch between one of the Key Mapper keyboards and a normal keyboard when a device, such as a keyboard or game controller, connects/disconnects then Key Mapper can do this for you automatically. Set it up here.</p>"},{"location":"faq/#my-keyboard-doesnt-appear-when-using-the-app","title":"\"My keyboard doesn't appear when using the app.\"","text":"<p>Key Mapper Basic Input Method (the keyboard built-in to the app) has no GUI/buttons. You can install the Key Mapper GUI Keyboard to get a proper keyboard that can also perform Key Mapper actions.</p>"},{"location":"faq/#why-dont-my-volume-buttons-work-when-i-press-them","title":"\"Why don't my volume buttons work when I press them?\"","text":"<p>Give the app Do Not Disturb access in your device settings. At the top of the homescreen in the Key Mapper app there is a \"Fix\" button to do this.</p>"},{"location":"faq/#why-arent-the-buttons-on-my-bluetooth-device-detected","title":"\"Why aren't the buttons on my Bluetooth device detected?\"","text":"<p>Many Bluetooth devices (like headphones) aren't supported by Key Mapper out of the box. Bluetooth keyboards work most of the time. If you are willing and able to do some simple debugging, perhaps by installing utility apps or using ADB, join the Discord server and we will try our best to get it working for you.</p>"},{"location":"faq/#why-doesnt-the-app-open-in-dex-mode","title":"\"Why doesn't the app open in Dex mode?\"","text":"<p>Samsung Dex doesn't allow apps with a 3rd party keyboard to open while in Dex mode. You can still configure key maps while out of Dex mode and your key maps which don't require a Key Mapper keyboard will still work in Dex mode.</p> <p>If you really want to open the app in DeX, you can put DeX in developer mode:</p> <ul> <li>In Samsung DeX, open Settings -&gt; Samsung DeX -&gt; About Samsung DeX</li> <li>Click/Tap on the \"Samsung DeX\" title 5 times very fast</li> <li>You will see a pop-up \"Turn on developer options?\", press OK</li> <li>Restart Samsung DeX for the change to take effect</li> </ul>"},{"location":"faq/#why-doesnt-the-app-uninstall","title":"\"Why doesn't the app uninstall?\"","text":"<p>You have probably enabled the app's device administrator in your device's settings. To uninstall the app, you must turn it off. The location of the device admin settings page varies on devices but on skins close to stock-Android it is under \"Security\" -&gt; \"Device admin apps\". If you need help, ask in the Discord server.</p>"},{"location":"faq/#why-cant-i-remap-some-of-my-joy-con-buttons","title":"\"Why can't I remap some of my Joy Con buttons?\"","text":"<p>Not all the Joy Con buttons are visible to accessibility services. There isn't anything the developer can do.</p> <p>I tested the app on SwitchRoot Android and this is what works...</p> <p>Working:</p> <ul> <li>ZL (Button L2)</li> <li>L (Button L1)</li> <li>- (Select)</li> <li>+ (Start)</li> <li>Left analog stick button (unknown keycode 0)</li> <li>ZR (Button R2)</li> <li>R (Button R1)</li> <li>X (Button X)</li> <li>Y (Button Y)</li> <li>B (Button B)</li> <li>A (Button A)</li> <li>Home (Home)</li> <li>Volume up (Vol up)</li> <li>Volume down (Vol down)</li> </ul> <p>Not working:</p> <ul> <li>Screenshot button</li> <li>All D-Pad buttons (used by OS)</li> <li>Both analog sticks (used by OS)</li> <li>Right analog stick button</li> <li>SR and SL (left joycon)</li> <li>SR and SL (right joycon)</li> <li>Power button</li> </ul>"},{"location":"faq/#add-on-screen-buttons-to-key-mapper","title":"\"Add on-screen buttons to Key Mapper\"","text":"<p>On-screen buttons are not a planned feature. In the near future, it will not be possible for apps to do this, even if some apps can right now. There is currently no work being done on adding on-screen buttons.</p> <p>Google is removing the ability for apps to draw overlays over other apps. This is called the \"system alert window\" feature in the developer world. Android Go devices already can't do this.</p>"},{"location":"faq/#a-game-doesnt-detect-my-key-maps","title":"\"A game doesn't detect my key maps\"","text":"<p>Unsupported games - Fortnite</p> <p>There is no guarantee that your key maps will work in games. The app isn't designed for it. Follow this guide if you are remapping buttons on a game controller to different buttons on a game controller.</p> <ul> <li>Connect your controller to your device.</li> <li>Create a trigger for whatever button you want to remap.</li> <li>Press \"Add Action\" and create a \"Key Event\" action by going to the \"Key Event\" tab.</li> <li>Choose your keycode AND select your controller as the device in the dropdown menu.</li> <li>Save the keymap and hopefully it will work.</li> </ul>"},{"location":"faq/#how-can-i-jump-bridge-with-key-mapper-how-can-i-use-key-mapper-for-minecraft-pvp","title":"\"How can I 'jump bridge' with Key Mapper? / How can I use Key Mapper for Minecraft PVP?\"","text":"<p>This is not an app designed for gaming. Please look elsewhere for help with this, such as YouTube tutorials or ask in the discord server. Also note that use of 'jump bridging' or very fast attacks on Minecraft servers where it is not allowed has absolutely nothing to do with the developer and it is not endorsed or encouraged. Again, this is not an app optimised for playing mobile games.</p>"},{"location":"faq/#can-i-use-the-app-on-chromebook","title":"\"Can I use the app on Chromebook?\"","text":"<p>Not all features work on Chromebook. The app is not supported on Chromebook. Key Mapper can't \"tap the screen\" for obvious reasons. If you want to play a game on Chromebook using Key Mapper with keyboard controls (especially Among Us) then you are unlikely to be able to do so.</p> <p>That being said, many features should work, such as remapping keyboard buttons.</p>"},{"location":"faq/#can-i-remap-on-screen-controls-to-buttons-with-key-mapper","title":"\"Can I remap on-screen controls to buttons with Key Mapper?\"","text":"<p>Technically yes but it would be a horrendous gaming experience. There is an action in Key Mapper to touch the screen but Key Mapper is only allowed to tap/swipe in one place at a time. Therefore, you wouldn't be able to tap forward on an on-screen joystick and shoot at the same time for example. This is how the Android API works and there is nothing I can do to change it.</p> <p>Ask for help </p>"},{"location":"faq/#can-i-remap-my-bixby-button","title":"\"Can I remap my Bixby button?\"","text":"<p>Key Mapper doesn't yet offer a way to remap the Bixby button but if you are rooted you can remap the Bixby button to something that Key Mapper can remap. Follow this guide on XDA.</p>"},{"location":"known-issues/","title":"Known Issues","text":""},{"location":"known-issues/#can-not-unlock-phone-because-there-is-no-keyboard","title":"Can not unlock phone because there is no keyboard.","text":"<p>This has happened because you are using the Key Mapper Basic Input Method. This is an input method with no on-screen keyboard. You will need to reboot your device into \"safe mode\". The way to do this varies between devices so if these instructions don't work you will have to research how do to this for your device online.</p> <p>For most devices you must...</p> <ol> <li>Turn on your device.</li> <li>Hold down on the power button until the on-screen power menu pops up.</li> <li>Hold down on the \"power off\" (or sometimes \"restart\") button in the power menu.</li> <li>A popup should say whether you want to boot into safe mode. Do this.</li> <li>Unlock your device after it has rebooted into safe mode.</li> <li>Reboot your device into normal mode by pressing power off or restart in the power menu. You do **    not** need to hold down on the \"power off\"/\"restart\" button to boot into safe mode.</li> </ol>"},{"location":"known-issues/#key-mapper-cant-tap-multiple-places-at-the-same-time","title":"Key Mapper can't tap multiple places at the same time","text":"<p>If you are wanting to use Key Mapper to make buttons tap points on your screen then you need to use the \"tap screen\" action. Due to a restriction in what background apps are allowed to do in Android, it is not possible for Key Mapper to tap multiple places on screen at the same time.</p>"},{"location":"known-issues/#key-mapper-cant-open-the-accessibility-settings-on-some-devices","title":"Key Mapper can't open the accessibility settings on some devices.","text":"<p>This is probably happening because your TV doesn't have any accessibility settings. The only way to fix it is to use ADB (Android Debug Bridge) on a PC/Mac. Please follow this guide to grant enable the accessibility service.</p>"},{"location":"known-issues/#external-keyboard-language-is-set-to-english-us-when-using-key-mapper-android-11-only","title":"External keyboard language is set to English US when using Key Mapper (Android 11 only)","text":"<p>This is a bug in Android 11 and should be fixed in Android 12. There is a setting in Key Mapper 2.3.0+ that helps you work around this issue. Read more here.</p>"},{"location":"known-issues/#key-maps-for-an-external-device-randomly-stop-working-after-a-reboot","title":"Key maps for an external device randomly stop working after a reboot","text":"<p>See issue #783.</p> <p>Problem: Key Mapper uses the device id (a.k.a descriptor) to ensure triggers from specific devices are only detected. The ids for some devices change after every reboot, which breaks this filtering. This is not supposed to happen but fortunately it only happens very rarely. Solution: Set the device for the trigger to \"any device\" so Key Mapper accepts the trigger from any device.</p>"},{"location":"known-issues/#volume-increases-to-maxminimum-when-pressing-power-and-the-respective-volume-button-when-the-device-is-off","title":"Volume increases to max/minimum when pressing power and the respective volume button when the device is off","text":"<p>This seems to be a bug with accessibility services on Android Pie+ on some devices. It also happens with the Macrodroid app when you only enable their accessibility service which filters key events. I tested Key Mapper with no code in the onKeyEvent function in the accessibility service and it still happens. These are the devices that I've tested.</p> <ul> <li> image/svg+xml  Rooted OxygenOS Android 10 OnePlus 6T</li> <li> image/svg+xml  Rooted stock Android 9 Pie custom ROM on the OnePlus 6T</li> <li> image/svg+xml  Non-rooted OxygenOS Android 10 OnePlus 7 Pro</li> <li> image/svg+xml  Android 10 on the Pixel 2</li> </ul>"},{"location":"quick-start/","title":"Quick Start Guide","text":"<p>This page aims to give users an introduction to the Key Mapper interface and a demonstration on how to perform typical tasks with the app. For specific troubleshooting, consult the FAQ.</p> <p></p> <p>Info</p> <p>This guide is updated to match current stable release UI. Report inaccuracies.</p>"},{"location":"quick-start/#first-time-setup","title":"First time setup","text":"<p>When you open Key Mapper, you will be presented with this screen. This screen is referred to as the Key Mapper home screen.</p> <p></p>"},{"location":"quick-start/#set-up-the-accessibility-service","title":"Set up the accessibility service","text":"<p>Tapping the FIX button next to the accessibility service prompt will allow you to grant Key Mapper permission to run its accessibility service. You must do this for the app to work at all.</p> <p></p> <p>You can then tap Key Mapper in your list of available services. There may be many others on this screen and your interface may be slightly different.</p> <p>Attention</p> <p>If nothing happens when you tap FIX, or if you can't enable the service, see this page or ask for help in the Discord server.</p> <p></p>"},{"location":"quick-start/#disable-app-killing","title":"Disable app-killing","text":"<p>Important</p> <p>If you are using a Huawei or Xiaomi branded device, a device with 2GB of RAM or less, or intend to use the app while playing a mobile game, it is especially important to follow the next step.</p> <p>Tapping the FIX button next to the battery optimisation prompt will allow you to turn off features of your device that may prevent Key Mapper's essential services from running in the background. This is usually the source of the common 'Key Mapper randomly stops working' issue.</p> <p>Devices older than Android 6.0 do not have this prompt in Key Mapper. However, I was still able to find the setting in my device settings app. Read more below for details.</p> <p></p> <p>The screen that opens after tapping FIX may vary depending on your device. In my case, to disable optimisation I found the app(s) in the list, tapped them to open their settings, and chose 'Don't optimise' and on the second device, 'Disabled'.</p> <p>Tip</p> <p>There is an excellent guide at dontkillmyapp.com that explains how to disable battery and/or memory optimisation for your specific device. If Key Mapper randomly stops working even after you complete these steps, ask for help in the Discord server.</p>"},{"location":"quick-start/#creating-a-key-map","title":"Creating a key map","text":"<p>Summary</p> <p>A key map is an association between a user input (such as pushing a key or button) and a response from the device (sending information about what key was pressed and for how long).</p> <p>In Key Mapper, 'user inputs' that are recognised by the app are called 'triggers'. The responses from your device that were due to a trigger being pressed are called 'actions'.</p> <p>Key Mapper lets you assign actions to triggers that may be different from their default use. A 'volume up' trigger normally increases the volume when pressed, but this app can change that to something else.</p> <p>This guide deals with 'Key event' triggers. If you want to remap fingerprint gestures, check out this guide.</p>"},{"location":"quick-start/#setting-the-triggers","title":"Setting the trigger(s)","text":"<p>To create your first key map, tap the + icon at the bottom of the Key Mapper home screen. You will see the screen below. On larger screens this will look slightly different because multiple tabs will be merged into one tab.</p> <p></p> <p>In either case, the first step is to record a trigger. Tap the red 'Record trigger' button and then press the physical button that you want to change the function of. In this guide I will demonstrate with 'volume down'.</p> <p>Key Mapper can also create a key map with multiple triggers. If you want to use more than one trigger for one key map, you can press the buttons in the order you will press them to execute the key map. For example, if you wanted to map 'Ctrl' + 'H' to show the device home menu you should press 'Ctrl' and then 'H'.</p> <p>Key Mapper can also remap fingerprint gestures on many devices. You can learn how to do this here.</p> <p>You should see this screen after pressing volume down.</p> <p></p>"},{"location":"quick-start/#setup-the-ability-to-properly-remap-volume-buttons","title":"Setup the ability to properly remap volume buttons","text":"<p>You only need to do this on Android 6.0+. If you want to remap volume buttons and use them when Do Not Disturb is enabled, you should grant Key Mapper permission to do so. Key Mapper will show the error in the picture above if you need to do this.</p> <p>Tapping FIX will allow you to grant the permission. Find Key Mapper in the list and tap it in order to choose 'Allowed'.</p> <p></p>"},{"location":"quick-start/#setting-the-actions","title":"Setting the action(s)","text":"<p>Next, it's time to choose an action. If you have a large screen, you will see the 'Add action' button at the bottom of the screen. Otherwise, tap the 'Actions' tab at the top of the screen and then you will see the 'Add action' button.</p> <p></p> <p>Tap the 'Add action' button at the bottom of this screen. The action selection screen will open. Here you can choose from a long list of actions. There is also a list of all the actions here. </p> <p>For this simple demonstration I will choose KEYCODE_0 from the Keycode tab. This action will emulate pressing the 0 key on a keyboard. Key Mapper will let you know if you need to do any extra steps so that an action can work. In the picture there is an error message in the action telling you to 'enable' a Key Mapper keyboard. Tapping the action will take you to the correct place so that you can fix the error. I will walk through how to set up a key code action since these are the most used.</p> <p></p> <p>Tip</p> <p>Key Mapper can also create a key map with multiple actions. If you want to add more actions to execute in series you can do so by tapping 'Add action' again and choosing the next action in the chain. You can drag and drop the actions into whatever order you like. In the next section you can specify a delay between those actions if you wish.</p>"},{"location":"quick-start/#fixing-the-actions","title":"Fixing the action(s)","text":"<ol> <li> <p>Tap the action to fix the error.</p> </li> <li> <p>If you are creating a key code, key event or text action then you MUST read this guide</p> </li> <li> <p>In this case tapping the action will take you to the 'Language &amp; Input' settings on your device.  On a stock Android 11 Pixel 2 this is what it looks like. You will see a list of all the installed input methods on your device.</p> <p></p> </li> <li> <p>It is important to have read the guide in step 2 to understand what is happening from now on. On my device I installed the Key Mapper GUI Keyboard so I am going to turn this one on. Press back to go back to Key Mapper.</p> </li> <li> <p>There is now a 2nd thing that needs to be fixed as you can see in the picture.</p> <p></p> </li> <li> <p>Tap the action again and the input method picker will show up as shown in the picture. On Android 11+ Key Mapper can fix this error for you without showing the input method picker if you have enabled the accessibility service.</p> <p></p> </li> <li> <p>Since I enabled the Key Mapper GUI Keyboard I will use that input method with Key Mapper.</p> </li> <li> <p>If you followed these steps correctly then Key Mapper will stop showing any error messages underneath the action as shown. This action will now work.</p> <p></p> </li> </ol>"},{"location":"quick-start/#customising-a-key-map","title":"Customising a key map","text":"<p>You may wish to customise your triggers and actions to have specific behaviours. Most people will want to do at least some customisation.</p>"},{"location":"quick-start/#trigger-settings","title":"Trigger settings","text":"<p>Starting with the triggers, tap the 3 dot  menu to the right of the trigger's name to bring up the following menu.</p> <p></p> <p>You can choose from four different settings. Turning on \"Do not override default action\" will mean that Key Mapper will not replace the normal operation of your trigger, instead it will execute the key map as well as the default operation.</p> <p>One trigger can have three different click types. Choose from short press, long press and double press. Read more.</p>"},{"location":"quick-start/#customising-actions","title":"Customising actions","text":"<p>Next, tap the 3 stacked dots  to the right of the action's name to bring up the following menu.</p> <p></p> <p>Here you can customise a lot of the operation of your key map, including timing and multipliers.</p> <p>The following details refer to action timing settings.</p> <p>\u00a0Delay before next action (ms) </p> <p>Key Mapper 2.2.0+</p> <p>This option takes effect if you have multiple actions in your mapping. The slider sets the amount of time between this action and the next.</p> <p>\u00a0How many times </p> <p>Key Mapper 2.1.0+</p> <p>On Key Mapper 2.2.0 and 2.1.0 this is called \"action count\".</p> <p>This option serves as a multiplier. If this is equal to 5 when your mapping is triggered then your action will be performed 5 times. If this is used with the 'repeat' option then this will perform the action this many times every time it repeats.</p>"},{"location":"quick-start/#repeating-actions","title":"Repeating actions","text":"<p> \u00a0 Repeat</p> <p>When this is turned on, Key Mapper will execute your actions repeatedly. This is particularly useful when emulating a keyboard key press, where in most applications holding down the key would result in a repeating output. The default settings in Key Mapper are designed to emulate that behaviour when 'Repeat' is turned on.</p> <p>\u00a0Repeat every... (ms) </p> <p>This option sets the time period for your repeating action. If this is set to 200, your action will repeat every 200ms, or in terms of frequency, 5 times per second. Some people prefer to think about this setting as a repeat rate, commonly measured in 'clicks' per second or cps. To calculate the appropriate time period for this option from a desired frequency, use this equation:</p> <pre><code>Time period (ms) = 1000 / Frequency ('cps')\n</code></pre> <p>\u00a0Delay until repeat... (ms) </p> <p>This option sets the amount of time between the first action and the second action (or the first repeat). This is part of the keyboard key behaviour simulation. If you want your repeating action to begin straight away, you can make this 0. </p>"},{"location":"quick-start/#hold-down-actions","title":"Hold down actions","text":"<p> \u00a0 Hold down</p> <p>Key Mapper 2.1.0+</p> <p>This setting provides the ability to simulate holding down a key or tapping a coordinate (Android 8.0+). With this turned on (and repeat turned off), the default behaviour is that holding down your trigger will translate to holding down the action, for as long as you hold down the trigger.</p> <p><sup><sub>\u00a0Hold down until trigger is...</sub> <sup><sub>Released</sub> <sup><sub>Pressed again</sub> <p>Key Mapper 2.2.0+</p> <p>This setting allows you to choose from two behaviours. If 'Released' is selected, holding down your trigger key(s) will translate to holding down the action, for as long as you hold down the trigger key(s).</p> <p>If you choose 'Pressed again', pressing your trigger key(s) once will be sufficient to start holding down the action. To stop the key map, you will need to press the trigger key(s) a second time.</p>"},{"location":"quick-start/#using-hold-down-and-repeat-together","title":"Using 'Hold down' and 'Repeat' together","text":"<p>Key Mapper 2.2.0+</p> <p>You can use turn on both of these settings to unlock an additional setting. A repeating hold down action behaves like a normal 'Repeat' action in that the action repeats itself with a given frequency. It also behaves like a 'Hold down' action in that each individual action will be held for a certain amount of time in each cycle.</p> <p>\u00a0Hold down duration (ms) </p> <p>This allows you to set how long the action is held down for before repeating.</p>"},{"location":"quick-start/#special-options","title":"Special options","text":"<p>You can see explanations of more options here.</p>"},{"location":"quick-start/#adding-constraints","title":"Adding constraints","text":"<p>Constraints allow you to restrict your mappings to only work in some situations.</p> <p>To add a constraint fron the 'Constraints and more' or 'Options' tab, tap 'Add constraint'.</p> <p>Go here to see how you can configure constraints.</p>"},{"location":"quick-start/#managing-key-maps","title":"Managing key maps","text":"<p>To save your key map and return to the home screen, tap the save :fontawesome-solid-save: icon in the bottom right of the screen.</p> <p>Now your key map should already be working. To pause/unpause all of your key maps, pull down the notification tray and tap the Key Mapper notification to toggle between Paused and Running.</p> <p> </p> <p>On the Key Mapper home screen, tap the 3 bar  menu to open the Key Mapper general settings. You will see the following options.</p> <p> </p> <p>Here you can pause/unpause/enable/disable all of your key maps at once. You can also back up and restore key maps here. Learn more about back up and restore.</p> <p>Tapping 'Show input method picker' allows for switching between a Key Mapper compatible keyboard and any other.</p> <p>Tip</p> <p>Key Mapper can also remap fingerprint gestures on many devices. You can learn how to do this here.</p>"},{"location":"report-issues/","title":"Report Issues","text":"<p>There is a button in the app that collects all the required information and walks through how to report an issue.</p> <ol> <li> <p>Enable \"extra logging\" in the Key Mapper settings. You can find it at the bottom of the settings page as shown below.</p> Screenshot <p></p> </li> <li> <p>Reproduce your issue. You must be able to make the bug happen again because otherwise we can't test that it has been fixed. \ud83d\ude42</p> </li> <li> <p>Tap the \"report bug\" button in the home screen menu as shown below. This will create a bug report zip file and help you send it to the developer.</p> Screenshot <p></p> </li> </ol>"},{"location":"sharing/","title":"Share Your Key Maps","text":"<p>Before posting on GitHub Discussions, please make sure you adhere to these guidelines.</p> Rules <p>Don't forget that by using the comment system on this website that you are still using another service, and should adhere to it's guidelines as well.</p>"},{"location":"sharing/#general-rules","title":"General Rules","text":""},{"location":"sharing/#rule-1","title":"Rule #1","text":"<p>Be polite and respectful. People who work on this app are volunteering their time. \ud83d\ude42</p>"},{"location":"sharing/#rule-2","title":"Rule #2","text":"<p>You should read the FAQ and known issues before asking questions, requesting features or reporting bugs. Bear in mind that this may update frequently. Messages repeating what is in the FAQ wastes everyone's time, so please don't do it.</p>"},{"location":"sharing/#rule-3","title":"Rule #3","text":"<p>No overly political discussion or NSFW discussion or imagery is permitted in any of our discussions. If discovered by a moderator you may be permanently banned.</p>"},{"location":"sharing/#rule-4","title":"Rule #4","text":"<p>This is an English-only discussion group. We remove messages in other languages simply because we don't have the time to translate or moderate messages in other languages.</p>"},{"location":"sharing/#1-sign-into-giscus","title":"1. Sign into Giscus","text":"<p>Giscus is a free and open source GitHub Discussions interpreter for integrating GitHub Discussions into a website.</p> <p>Scroll to the bottom of the current page, and click the button that says \"Sign in with GitHub.\" You can either sign in to GitHub or create an account from the newly opened GitHub window. You will be asked to sign into GitHub so you can use Giscus. After being logged in, you are free to use the Discussions.</p>"},{"location":"sharing/#2-share-your-key-maps","title":"2. Share your key maps","text":"<p>Post your key maps in a new comment at the bottom of this page. React to other's key maps with the upvote button.</p> <p>The main intent behind Key Mapper Discussions is to provide users an easy way to share their key maps without them getting lost in the Discord chat, or any other subtle inconvenience.</p> <p>Tip</p> <p>Please write in your comment what your key map does. E.g if your key map opens the home screen when you press your volume buttons please put \"open home screen with the volume down button\".</p>"},{"location":"includes/action-type-list/","title":"Action type list","text":"Tab Description App Choose an app to open when you press your trigger. App shortcut Choose an app operation (such as sharing location, checking local traffic, sending a text message) Key code Emulate a keyboard key press (such as an alphanumeric character or multimedia key) System Choose a system operation (such as toggling Bluetooth, opening the home menu, toggling flashlight) Key An alternative way to choose a key press action, by pressing the key that you want to map to. Tap screen (2.1.0+) Emulate a screen tap at a specific location on your screen. Key event (2.1.0+) Emulate a key press from a specifc connected device. Text Emulate typing a string. Intent (2.3.0+) See this page. Phone call (2.3.0+) Call a telephone number. Network and carrier rates will apply. Sound (2.4.0+) Play a sound Unsupported actions A list of actions that your device won't allow you to use. Android frequently changes what users are allowed to do between versions."},{"location":"includes/configuring-constraints/","title":"Configuring constraints","text":"<p>Constraints allow you to restrict your mappings to only work in some situations.</p> <p>To add a constraint fron the 'Constraints and more' or 'Options' tab, tap 'Add constraint'.</p> <p>Go here to see how you can configure constraints.</p>"},{"location":"includes/go-to-settings/","title":"Go to settings","text":"<p>Open the Key Mapper settings by opening the menu  at the bottom of the home screen and then tapping Settings.</p>"},{"location":"includes/requires-key-mapper-keyboard-or-shizuku/","title":"Requires key mapper keyboard or shizuku","text":"<p>Attention</p> <p>If you are on Android 11 or newer it is recommended that you install Shizuku. Read more about this here.</p> <p>If you don't want to install Shizuku then you must be using the Key Mapper GUI Keyboard or the Key Mapper Basic Input Method for this to work. Follow this guide to set it up.</p>"},{"location":"includes/requires-key-mapper-keyboard/","title":"Requires key mapper keyboard","text":"<p>Attention</p> <p>You need to be using the Key Mapper GUI Keyboard or the Key Mapper Basic Input Method for this to work. Follow this guide to set it up.</p>"},{"location":"includes/screenshot-version/","title":"Screenshot version","text":"<p>Info</p> <p>This guide is updated to match current stable release UI. Report inaccuracies.</p>"},{"location":"includes/action-options/action-count/","title":"Action count","text":"<p>\u00a0How many times </p> <p>Key Mapper 2.1.0+</p> <p>On Key Mapper 2.2.0 and 2.1.0 this is called \"action count\".</p> <p>This option serves as a multiplier. If this is equal to 5 when your mapping is triggered then your action will be performed 5 times. If this is used with the 'repeat' option then this will perform the action this many times every time it repeats.</p>"},{"location":"includes/action-options/delay-before-next-action/","title":"Delay before next action","text":"<p>\u00a0Delay before next action (ms) </p> <p>Key Mapper 2.2.0+</p> <p>This option takes effect if you have multiple actions in your mapping. The slider sets the amount of time between this action and the next.</p>"},{"location":"includes/action-options/delay-until-repeat/","title":"Delay until repeat","text":"<p>\u00a0Delay until repeat... (ms) </p> <p>This option sets the amount of time between the first action and the second action (or the first repeat). This is part of the keyboard key behaviour simulation. If you want your repeating action to begin straight away, you can make this 0. </p>"},{"location":"includes/action-options/hold-down-behaviour/","title":"Hold down behaviour","text":"<p><sup><sub>\u00a0Hold down until trigger is...</sub> <sup><sub>Released</sub> <sup><sub>Pressed again</sub> <p>Key Mapper 2.2.0+</p> <p>This setting allows you to choose from two behaviours. If 'Released' is selected, holding down your trigger key(s) will translate to holding down the action, for as long as you hold down the trigger key(s).</p> <p>If you choose 'Pressed again', pressing your trigger key(s) once will be sufficient to start holding down the action. To stop the key map, you will need to press the trigger key(s) a second time.</p>"},{"location":"includes/action-options/hold-down/","title":"Hold down","text":"<p> \u00a0 Hold down</p> <p>Key Mapper 2.1.0+</p> <p>This setting provides the ability to simulate holding down a key or tapping a coordinate (Android 8.0+). With this turned on (and repeat turned off), the default behaviour is that holding down your trigger will translate to holding down the action, for as long as you hold down the trigger.</p>"},{"location":"includes/action-options/repeat-every/","title":"Repeat every","text":"<p>\u00a0Repeat every... (ms) </p> <p>This option sets the time period for your repeating action. If this is set to 200, your action will repeat every 200ms, or in terms of frequency, 5 times per second. Some people prefer to think about this setting as a repeat rate, commonly measured in 'clicks' per second or cps. To calculate the appropriate time period for this option from a desired frequency, use this equation:</p> <pre><code>Time period (ms) = 1000 / Frequency ('cps')\n</code></pre>"},{"location":"includes/action-options/repeat-limit/","title":"Repeat limit","text":"<p>\u00a0Repeat limit </p> <p>Key Mapper 2.3.0+</p> <p>Changing this will change how many times the action will repeat. By default this is set to \"no limit\".</p>"},{"location":"includes/action-options/repeat/","title":"Repeat","text":"<p> \u00a0 Repeat</p> <p>When this is turned on, Key Mapper will execute your actions repeatedly. This is particularly useful when emulating a keyboard key press, where in most applications holding down the key would result in a repeating output. The default settings in Key Mapper are designed to emulate that behaviour when 'Repeat' is turned on.</p>"},{"location":"includes/action-options/using-hold-down-and-repeat-together/","title":"Using hold down and repeat together","text":"<p>Key Mapper 2.2.0+</p> <p>You can use turn on both of these settings to unlock an additional setting. A repeating hold down action behaves like a normal 'Repeat' action in that the action repeats itself with a given frequency. It also behaves like a 'Hold down' action in that each individual action will be held for a certain amount of time in each cycle.</p> <p>\u00a0Hold down duration (ms) </p> <p>This allows you to set how long the action is held down for before repeating.</p>"},{"location":"includes/trigger-options/dont-override-default-action/","title":"Dont override default action","text":"<p> \u00a0 Do not override default action</p> <p>This is turned off by default. If this is turned on for a key then the key will still do it's normal thing even though it is remapped. E.g a volume down key with this option will still turn the volume down.</p>"},{"location":"includes/trigger-options/double-press-delay/","title":"Double press delay","text":"<p>\u00a0Double press timeout (ms) </p> <p>This is only shown if a trigger has at least one key that needs to double pressed. This option will change the maximum amount of time that a button needs to be double pressed so that it is detected as a double press.</p>"},{"location":"includes/trigger-options/long-press-delay/","title":"Long press delay","text":"<p>\u00a0Long press delay (ms) </p> <p>This is only shown if a trigger has at least one key that needs to long pressed. This option will change for how long these keys need to be held down.</p>"},{"location":"includes/trigger-options/long-press-double-vibration/","title":"Long press double vibration","text":"<p> \u00a0 Vibrate when keys are initially pressed and again when long pressed</p> <p>This is only shown if the 'at the same time' trigger mode is selected and the trigger needs to be long pressed.</p>"},{"location":"includes/trigger-options/on-screen-message/","title":"On screen message","text":"<p> \u00a0 Show an on-screen message</p> <p>When this is turned on, the following notice will come up at the bottom of the screen when ever you trigger your mapping.</p> <p></p>"},{"location":"includes/trigger-options/sequence-trigger-timeout/","title":"Sequence trigger timeout","text":"<p>\u00a0Sequence trigger timeout (ms) </p> <p>This is only shown if you've chosen the 'in sequence' trigger mode. This option will change the time limit for how fast you need to complete the trigger.</p>"},{"location":"includes/trigger-options/trigger-when-screen-off/","title":"Trigger when screen off","text":"<p> \u00a0 Detect trigger when screen is off. ROOT only.</p> <p>These are the buttons which can be detected when the screen is off. Let the developer know about any buttons you would also like to be supported.</p> <p>Note</p> <p>Please send the output of pressing the buttons while running the <code>adb shell getevent -lq</code> command so the developer knows which key event name they need to add.</p> <ul> <li>Volume Up</li> <li>Volume Down</li> <li>Headset button</li> <li>Camera focus button</li> <li>Camera button</li> <li>Bixby button - on some ROMs the Bixby button is mapped to the Menu or Assist key code in Android so it will appear as these buttons in the trigger.</li> <li>Search button</li> </ul>"},{"location":"includes/trigger-options/vibrate/","title":"Vibrate","text":"<p> \u00a0 Vibrate</p> <p>\u00a0Vibrate duration (ms) </p> <p>Tapping 'Vibrate' will cause your device to vibrate whenever you trigger your mapping. You can change how long your device vibrates with the slider.</p>"},{"location":"user-guide/actions/","title":"Actions","text":""},{"location":"user-guide/actions/#open-app","title":"Open app","text":"<p>Launch an app.</p>"},{"location":"user-guide/actions/#launch-app-shortcut","title":"Launch app shortcut","text":"<p>Launch an app shortcut. This is a great way to add more functionality to Key Mapper.</p>"},{"location":"user-guide/actions/#input-key-code","title":"Input key code","text":"<p>Attention</p> <p>If you are on Android 11 or newer it is recommended that you install Shizuku. Read more about this here.</p> <p>If you don't want to install Shizuku then you must be using the Key Mapper GUI Keyboard or the Key Mapper Basic Input Method for this to work. Follow this guide to set it up.</p> <p>Input a simple key event with this key code.</p>"},{"location":"user-guide/actions/#tap-screen-210-android-70","title":"Tap screen (2.1.0+, Android 7.0+)","text":"<p>This will tap a point on your screen.</p> <p>!!! warning Android restricts what apps can do with this so you won't be able to tap the screen at the same time as Key Mapper and Key Mapper can't tap multiple places at once.</p>"},{"location":"user-guide/actions/#swipe-screen-250-android-70","title":"Swipe screen (2.5.0+, Android 7.0+)","text":"<p>This will swipe from a start point to and end point on your screen. You can also setup the amount of \"fingers\" to simulate and the duration for the gesture, but this is limitied due to your Android Version. </p> <p>See: getMaxStrokeCount and getMaxStrokeDuration for more information.</p>"},{"location":"user-guide/actions/#pinch-screen-250-android-70","title":"Pinch screen (2.5.0+, Android 7.0+)","text":"<p>This will simulate a pinch gesture from a start point to and end point on your screen. You can choose between pinch in and pinch out and also the \"pinch distance\" for the pinch gesture. This is the distance between the start and the end point. The higher the distance, the stronger the pinch gesture, so you may want to start with a lower value for the pinch with max. 100. Later on you can adjust this by your needs, but the endpoints will never be less than 0 due to android restrictions.</p> <p>You can also setup the amount of \"fingers\" to simulate and the duration for the gesture, but this is limitied due to your Android Version. </p> <p>See: getMaxStrokeCount and getMaxStrokeDuration for more information.</p>"},{"location":"user-guide/actions/#input-key-event-210","title":"Input key event (2.1.0+)","text":"<p>Attention</p> <p>If you are on Android 11 or newer it is recommended that you install Shizuku. Read more about this here.</p> <p>If you don't want to install Shizuku then you must be using the Key Mapper GUI Keyboard or the Key Mapper Basic Input Method for this to work. Follow this guide to set it up.</p> <p>This will input a more complicated key event than the simple key code action.</p>"},{"location":"user-guide/actions/#input-text","title":"Input text","text":"<p>Attention</p> <p>You need to be using the Key Mapper GUI Keyboard or the Key Mapper Basic Input Method for this to work. Follow this guide to set it up.</p> <p>This will input any text that you want.</p>"},{"location":"user-guide/actions/#intent-230","title":"Intent (2.3.0+)","text":"<p>This is a way to communicate with other apps, especially automation apps because they often have a way to trigger their own actions from an intent.</p> <p>Read about intents in the Android SDK documentation here.</p>"},{"location":"user-guide/actions/#example-1","title":"Example 1","text":"<p>Opening the WiFi settings on the device. These are the only fields that you need to fill in...</p> <ul> <li>Description for Key Mapper = This can be anything you want because it is just for you to identify this action within the Key Mapper user interface.</li> <li> <p>Select \"Activity\".</p> </li> <li> <p>Action = <code>android.settings.WIFI_SETTINGS</code></p> </li> </ul>"},{"location":"user-guide/actions/#example-2","title":"Example 2","text":""},{"location":"user-guide/actions/#1-setting-up-the-tasker-event","title":"1. Setting up the Tasker event","text":"<ol> <li>Select \"Intent Received\" event.</li> <li>You only need to fill in the \"Action\" field. The action can be anything you want but since the action must be unique on the device it is recommended to start it with <code>net.dinglish.android.tasker</code>. In Key Mapper you will have to use the exact same action.    </li> </ol>"},{"location":"user-guide/actions/#2-setting-up-key-mapper","title":"2. Setting up Key Mapper","text":"<p>Send a broadcast to launch a Tasker action. These are the only fields that you need to fill in...</p> <ul> <li>Description for Key Mapper = This can be anything you want because it is just for you to identify this action within the Key Mapper user interface.</li> <li> <p>Select \"Broadcast receiver\".</p> </li> <li> <p>Action = The exact same action that you used in Tasker. In my example this would be <code>net.dinglish.android.tasker.MY_ACTION</code>.</p> </li> </ul> <p>Launching Termux command intents</p> <p>You need to open the app info page for Key Mapper in your device settings and grant it the \"run commands in termux environment\" permission. On Android 12+ you must also turn off battery optimisation for Termux so that Android allows Termux to be started from the background.</p>"},{"location":"user-guide/actions/#phone-call-230","title":"Phone call (2.3.0+)","text":"<p>This will start calling the number that you put.</p>"},{"location":"user-guide/actions/#play-sound-240","title":"Play sound (2.4.0+)","text":"<p>This action will play a sound. Key Mapper will copy the sound file to its own folder, which means you won't have to worry about losing them. Key Mapper will only play one sound at a time and the sound will play forever until it stops or you pause your key maps. Your sounds will be backed up and restored with your key maps as well.</p>"},{"location":"user-guide/actions/#toggleenabledisable-wifi","title":"Toggle/enable/disable WiFi","text":"<p>Requires ROOT permission on Android 10+</p> <p>If you aren't rooted then you must install the WyFy app. You must then use the Intent action in Key Mapper to send a broadcast that tells this app to change the WiFi state. In the WyFy's README it outlines the Intent parameters. This app works around the issue by targeting API 28 (Android 9), which means the app doesn't need to follow the new restrictions in API 29 (Android 10). But this means it can't be approved in the Play Store so you must install the apk manually from GitHub or through F-Droid.</p>"},{"location":"user-guide/actions/#toggleenabledisable-bluetooth-up-to-android-12l","title":"Toggle/enable/disable Bluetooth  (up to Android 12L)","text":""},{"location":"user-guide/actions/#toggleenabledisable-mobile-data","title":"Toggle/enable/disable mobile data","text":"<p>Requires ROOT permission</p>"},{"location":"user-guide/actions/#toggleenabledisable-auto-brightness","title":"Toggle/enable/disable auto brightness","text":""},{"location":"user-guide/actions/#increasedecrease-brightness","title":"Increase/decrease brightness","text":""},{"location":"user-guide/actions/#toggleenabledisable-auto-rotate","title":"Toggle/enable/disable auto-rotate","text":""},{"location":"user-guide/actions/#set-screen-to-portraitlandscape","title":"Set screen to portrait/landscape","text":""},{"location":"user-guide/actions/#set-screen-orientation-to-0-90-180-or-270","title":"Set screen orientation to 0\u00b0, 90\u00b0, 180\u00b0 or 270\u00b0","text":""},{"location":"user-guide/actions/#cycle-through-screen-orientations","title":"Cycle through screen orientations","text":""},{"location":"user-guide/actions/#volume-updown","title":"Volume up/down","text":""},{"location":"user-guide/actions/#muteun-mutetoggle-volume-android-60","title":"Mute/un-mute/toggle volume (Android 6.0+)","text":""},{"location":"user-guide/actions/#show-volume-popup","title":"Show volume popup","text":""},{"location":"user-guide/actions/#increasedecrease-volume-stream","title":"Increase/decrease volume stream","text":"<p>This will increase or decrease a specific one of these volume streams.</p> <ul> <li>Alarm</li> <li>DTMF</li> <li>Music</li> <li>Notification</li> <li>Ring</li> <li>System</li> <li>Voice call</li> <li>Accessibility</li> </ul>"},{"location":"user-guide/actions/#cycle-through-ringer-modes","title":"Cycle through ringer modes","text":""},{"location":"user-guide/actions/#change-ringer-mode","title":"Change ringer mode","text":""},{"location":"user-guide/actions/#cycle-between-vibrate-and-ring","title":"Cycle between vibrate and ring","text":""},{"location":"user-guide/actions/#toggleenabledisable-do-not-disturb-mode-android-60","title":"Toggle/enable/disable do not disturb mode (Android 6.0+)","text":""},{"location":"user-guide/actions/#expandtoggle-notification-drawer","title":"Expand/toggle notification drawer","text":""},{"location":"user-guide/actions/#expandtoggle-quick-settings","title":"Expand/toggle quick settings","text":""},{"location":"user-guide/actions/#collapse-the-status-bar-up-to-android-14","title":"Collapse the status bar (up to Android 14)","text":""},{"location":"user-guide/actions/#playpausetoggle-media","title":"Play/pause/toggle media","text":""},{"location":"user-guide/actions/#next-track","title":"Next track","text":""},{"location":"user-guide/actions/#previous-track","title":"Previous track","text":""},{"location":"user-guide/actions/#fast-forward","title":"Fast forward","text":""},{"location":"user-guide/actions/#rewind","title":"Rewind","text":""},{"location":"user-guide/actions/#go-back","title":"Go back","text":""},{"location":"user-guide/actions/#go-home","title":"Go home","text":""},{"location":"user-guide/actions/#open-recent-apps","title":"Open recent apps","text":""},{"location":"user-guide/actions/#toggle-split-screen-android-70","title":"Toggle split screen (Android 7.0+)","text":""},{"location":"user-guide/actions/#go-to-the-last-app-android-70","title":"Go to the last app (Android 7.0+)","text":""},{"location":"user-guide/actions/#open-menu","title":"Open menu","text":""},{"location":"user-guide/actions/#toggleenabledisable-flashlight","title":"Toggle/enable/disable flashlight","text":""},{"location":"user-guide/actions/#toggleenabledisable-nfc","title":"Toggle/enable/disable NFC","text":"<p>Requires ROOT permission</p>"},{"location":"user-guide/actions/#move-cursor-to-the-end-of-text","title":"Move cursor to the end of text","text":""},{"location":"user-guide/actions/#toggleshowhide-on-screen-keyboard-android-70","title":"Toggle/show/hide on-screen keyboard (Android 7.0+)","text":""},{"location":"user-guide/actions/#show-keyboard-picker-up-to-android-90","title":"Show keyboard picker (up to Android 9.0)","text":"<p>Requires ROOT permission on Android 8.1 and 9.0</p>"},{"location":"user-guide/actions/#cutcopypaste","title":"Cut/copy/paste","text":""},{"location":"user-guide/actions/#select-word-at-cursor","title":"Select word at cursor","text":""},{"location":"user-guide/actions/#switch-keyboard","title":"Switch keyboard","text":""},{"location":"user-guide/actions/#toggleenabledisable-airplane-mode","title":"Toggle/enable/disable airplane mode","text":""},{"location":"user-guide/actions/#take-screenshot","title":"Take screenshot","text":"<p>Requires ROOT permission on Android 8.1 and older</p>"},{"location":"user-guide/actions/#open-voice-assistant","title":"Open voice assistant","text":""},{"location":"user-guide/actions/#open-device-assistant","title":"Open device assistant","text":""},{"location":"user-guide/actions/#open-camera-app","title":"Open camera app","text":""},{"location":"user-guide/actions/#open-settings-app","title":"Open settings app","text":""},{"location":"user-guide/actions/#lock-device","title":"Lock device","text":"<p>Requires ROOT permission on Android 8.1 and older</p>"},{"location":"user-guide/actions/#secure-lock-device","title":"Secure lock device","text":"<p>This is different to 'lock device' because this will force you to unlock your device with your PIN or password and not with biometrics.</p>"},{"location":"user-guide/actions/#turn-onoff-device","title":"Turn on/off device","text":"<p>Requires ROOT permission</p>"},{"location":"user-guide/actions/#show-power-menu","title":"Show power menu","text":""},{"location":"user-guide/actions/#answerend-phone-call-240","title":"Answer/end phone call (2.4.0+)","text":"<p>If your phone is ringing then this action will answer the phone or if you are in a call then it will end it. Selecting this action will automatically add the constraint to your key map when your device is ringing or is in a call respectively.</p> <p>Attention</p> <p>If you are using a volume button trigger with these actions then this key map will only work if you are using on of the Key Mapper keyboards! This is because Android doesn't tell accessibility services when the volume buttons are being pressed when your device is ringing or is in a phone call. But it does tell input methods when they are being pressed so you must use a Key Mapper keyboard that tells Key Mapper when the buttons are being pressed.</p>"},{"location":"user-guide/actions/#do-nothing","title":"Do nothing","text":""},{"location":"user-guide/actions/#dismiss-all-notifications-240","title":"Dismiss all notifications (2.4.0+)","text":""},{"location":"user-guide/actions/#dismiss-most-recent-notification-240","title":"Dismiss most recent notification (2.4.0+)","text":""},{"location":"user-guide/adb-permissions/","title":"ADB Permissions","text":""},{"location":"user-guide/adb-permissions/#prepare-adb-android-debug-bridge","title":"Prepare ADB (Android Debug Bridge)","text":"<p>You might need to attempt this process multiple times because it can be flaky.</p> <ol> <li> <p>Enable developer options on your device by going to device Settings -&gt; 'About Phone' and tapping 'Build Number' many times until it says you've enabled developer options. The location of the Build Number may vary between devices.</p> Screenshot <p></p> </li> <li> <p>Enable USB Debugging in developer options and plug your device into your PC.</p> Screenshot <p></p> </li> <li> <p>Download the Android SDK platform tools from here and unzip it.</p> </li> <li> <p>Open a terminal/command prompt in the unzipped folder.</p> </li> <li> <p>Type or paste in a terminal: <code>adb devices</code> and your device then click the prompt on your phone to allow USB debugging from your PC.</p> Prompt on phone <p></p> </li> <li> <p>Type <code>adb devices</code> again and make sure you see the correct output as shown below.</p> Correct command prompt output <p></p> Incorrect command prompt outputs <p> </p> </li> </ol>"},{"location":"user-guide/adb-permissions/#write_secure_settings","title":"WRITE_SECURE_SETTINGS","text":"<p>There are 3 ways to grant this permission.</p> <ul> <li> <p>Use Shizuku (Key Mapper 2.4.0+ only). This is recommended on all devices running Android 11 and   newer. This requires some setting up. Read the guide here.</p> </li> <li> <p>If your device is rooted, Key Mapper can grant itself these permissions by enabling the \"Key   Mapper has root permission\" toggle in the Key Mapper settings.</p> </li> <li> <p>If your device is not rooted and you don't want to use Shizuku you must do the following...</p> <ol> <li> <p>Follow the \"Prepare ADB\" guide at the top of this page.</p> </li> <li> <p>Type or paste in a terminal:</p> </li> </ol> <pre><code>adb shell pm grant io.github.sds100.keymapper android.permission.WRITE_SECURE_SETTINGS\n</code></pre> <p>Attention</p> <p>For CI builds (the app icon with a green square) the package name is <code>io.github.sds100.keymapper.ci</code>. For Debug builds (the app icon with a yellow square) the package name is <code>io.github.sds100.keymapper.debug</code>.</p> </li> </ul> <p>These permissions persist across reboots but need to be granted again if the app is reinstalled.</p>"},{"location":"user-guide/adb-permissions/#enabling-the-accessibility-service","title":"Enabling the Accessibility Service","text":"<p>You may wish to enable Key Mapper's accessibility service using ADB if you cannot do so in-app due to manufacturer constraints.</p> <p>Tip</p> <p>It is recommended to also follow the instructions to grant the WRITE_SECURE_SETTINGS permission on this page so Key Mapper can start and stop the accessibility service itself.</p> <ol> <li> <p>Follow the \"Prepare ADB\" guide at the top of this page.</p> </li> <li> <p>To add Key Mapper to the List of the enabled accessibility providers, type or paste in a    terminal:</p> <pre><code>adb shell settings put secure enabled_accessibility_services io.github.sds100.keymapper/io.github.sds100.keymapper.service.MyAccessibilityService\n</code></pre> </li> </ol>"},{"location":"user-guide/api/","title":"API","text":"<p>There are a few ways that other apps can interact with Key Mapper.</p>"},{"location":"user-guide/api/#trigger-key-maps-from-other-apps-230","title":"Trigger key maps from other apps (2.3.0+)","text":"<p>Read more here.</p>"},{"location":"user-guide/api/#pausing-and-resuming-your-key-maps-230","title":"Pausing and resuming your key maps (2.3.0+)","text":"<p>Read more here.</p>"},{"location":"user-guide/backup-restore/","title":"Back up and Restore (2.1.0+)","text":"<p>You can create and restore backups of any of your mappings in Key Mapper.</p> <p>This menu will be referred to frequently in this guide.</p> <p></p>"},{"location":"user-guide/backup-restore/#automatically-back-up-mappings","title":"Automatically back up mappings","text":"<p>You can ask Key Mapper to make backups of your in-app in the Key Mapper Settings menu. To open the Key Mapper Settings, tap the 3 bar  menu. You will see the menu as shown at the top of this page.</p> <p>Tap 'Settings'. On this page you can find and change more advanced settings and set preferences.</p> <p>Tap 'Automatically back up key maps to a specified location'. Your file manager will then ask you to choose a folder to save your key maps.</p>"},{"location":"user-guide/backup-restore/#manual-back-up","title":"Manual back up","text":""},{"location":"user-guide/backup-restore/#everything","title":"Everything","text":"<p>Tap the 3 bar  menu. You will see the menu as shown at the top of this page.</p> <p>Tap 'Back up everything' this will back up all your mappings. Key maps, fingerprint gesture maps... everything.</p>"},{"location":"user-guide/backup-restore/#just-key-maps","title":"Just key maps","text":"<p>On the Key Mapper home screen, press and hold on a key map. You can then select the key maps you wish to back up.</p> <p>Tap the 3 dot  menu in the bottom left. Choose 'back up'. Your file manager will then ask you to choose a folder to save your key maps.</p>"},{"location":"user-guide/backup-restore/#just-fingerprint-gesture-maps","title":"Just fingerprint gesture maps","text":"<p>Click \"Back up all\" at the bottom of the fingerprint page. This will back up all your fingerprint maps even if they don't do anything.</p>"},{"location":"user-guide/backup-restore/#restore-mappings","title":"Restore mappings","text":"<p>Tap the 3 bar  menu. You will see the menu as shown at the top of this page.</p> <p>Tap 'Restore'. Your file manager will then ask you to choose a JSON file containing your mappings.</p> <p>The key maps in the backup will be added to your existing key maps so if you want to replace them then hold down on a key map then press the select all   button then delete them all. </p>"},{"location":"user-guide/constraints/","title":"Constraints","text":"<p>Constraints allow you to restrict your mappings to only work in some situations.</p> <p>If you have more than two constraints you can choose between an 'AND' and 'OR' mode. For 'AND' mode all the constraints need to be satisfied and for 'OR' mode at least one needs to be. </p>"},{"location":"user-guide/constraints/#app-innot-foreground","title":"App in/not foreground","text":"<p>Your mapping will only work if your app of choice is the actively selected window, i.e. on screen and being interacted with. 'App not in foreground' will likewise restrict your map to working only if your app of choice isn't in focus.</p>"},{"location":"user-guide/constraints/#app-playing-media-220","title":"App playing media (2.2.0+)","text":"<p>Your mapping will only work if your app of choice is playing media.</p>"},{"location":"user-guide/constraints/#app-not-playing-media-240","title":"App not playing media (2.4.0+)","text":"<p>Your mapping will only work if your app of choice is not playing media.</p>"},{"location":"user-guide/constraints/#media-playing-240","title":"Media playing (2.4.0+)","text":"<p>Your mapping will only work if any media is playing.</p>"},{"location":"user-guide/constraints/#media-not-playing-240","title":"Media not playing (2.4.0+)","text":"<p>Your mapping will only work if no media is playing.</p>"},{"location":"user-guide/constraints/#bluetooth-device-is-connecteddisconnected","title":"Bluetooth device is connected/disconnected","text":"<p>Your mapping will only work if a specific bluetooth device is connected/disconnected.</p>"},{"location":"user-guide/constraints/#orientation-220","title":"Orientation (2.2.0+)","text":"<p>This will restrict your gesture map to work only when the device is set to a specific screen orientation.</p>"},{"location":"user-guide/constraints/#screen-is-onoff-root","title":"Screen is on/off (ROOT)","text":"<p>Only for key maps</p> <p>Attention</p> <p>You must grant Key Mapper root permission and select the option to detect the key map when the screen is off.</p> <p>Only allow the key map to be triggered when the screen is on or off.</p>"},{"location":"user-guide/constraints/#flashlight-is-onoff-240-android-60","title":"Flashlight is on/off (2.4.0+, Android 6.0+)","text":"<p>Your mapping will only work if the front or back flashlight is on/off.</p>"},{"location":"user-guide/constraints/#wifi-onoffconnecteddisconnect-240","title":"WiFi on/off/connected/disconnect (2.4.0+)","text":"<p>Your mapping will only work if it your device's WiFi is on/off or connected/disconnected to a network.</p>"},{"location":"user-guide/constraints/#input-method-isnot-chosen-240","title":"Input method is/not chosen (2.4.0+)","text":"<p>Your mapping will only work if the input method that you are using matches the constraint.</p>"},{"location":"user-guide/constraints/#device-is-locked-240-android-51","title":"Device is locked (2.4.0+, Android 5.1+)","text":"<p>Your mapping will only work if the device is locked. The screen must still be on because Android doesn't allow apps to detect button presses when the screen is off.</p>"},{"location":"user-guide/constraints/#device-is-unlocked-240-android-51","title":"Device is unlocked (2.4.0+, Android 5.1+)","text":"<p>Your mapping will only work if the device is unlocked.</p>"},{"location":"user-guide/constraints/#in-phone-callnot-in-phone-callphone-ringing-240","title":"In phone call/not in phone call/phone ringing (2.4.0+)","text":"<p>Your mapping will only be triggered if you are (not) in a phone call or if your device is ringing.</p>"},{"location":"user-guide/constraints/#chargingdischarging-241","title":"Charging/discharging (2.4.1+)","text":"<p>Your mapping will only be triggered if your device is charging or discharging.</p>"},{"location":"user-guide/controlling-mappings/","title":"Controlling your mappings","text":"<p>There are many ways to pause and resume your mappings. These are very useful features because they allow to easily turn off your key maps if you don't need to use them.</p>"},{"location":"user-guide/controlling-mappings/#press-the-button-in-the-home-screen-menu","title":"Press the button in the home screen menu","text":""},{"location":"user-guide/controlling-mappings/#use-the-notification","title":"Use the notification","text":""},{"location":"user-guide/controlling-mappings/#use-the-quick-settings-tile","title":"Use the quick settings tile","text":""},{"location":"user-guide/controlling-mappings/#intent-api-230","title":"Intent API (2.3.0+)","text":"<p>This will allow other apps to pause and resume your mappings by broadcasting an Intent to Key Mapper. The properties for the Intent are shown below</p>"},{"location":"user-guide/controlling-mappings/#action-choose-one","title":"Action (choose one)","text":"<p><pre><code>io.github.sds100.keymapper.ACTION_PAUSE_MAPPINGS\n</code></pre> <pre><code>io.github.sds100.keymapper.ACTION_RESUME_MAPPINGS\n</code></pre> <pre><code>io.github.sds100.keymapper.ACTION_TOGGLE_MAPPINGS\n</code></pre></p>"},{"location":"user-guide/controlling-mappings/#package","title":"Package","text":"<pre><code>io.github.sds100.keymapper\n</code></pre> <p>Add <code>.debug</code> or <code>.ci</code> to the end of the package name if you are using a debug or ci build of Key Mapper.</p>"},{"location":"user-guide/controlling-mappings/#class","title":"Class","text":"<pre><code>io.github.sds100.keymapper.api.PauseMappingsBroadcastReceiver\n</code></pre>"},{"location":"user-guide/fingerprint-gestures/","title":"Fingerprint Gesture Maps (2.2.0+, Android 8.0+)","text":"<p>This page aims to explain how to remap fingerprint gestures. For specific troubleshooting, consult the FAQ.</p> <p>Warning</p> <p>This feature of Key Mapper does not support all devices. If you are having trouble with remapping fingerprint gestures, make sure you have read and understood the disclaimer below.</p> <p>Info</p> <p>This guide is updated to match current stable release UI. Report inaccuracies.</p>"},{"location":"user-guide/fingerprint-gestures/#disclaimer","title":"Disclaimer","text":"<p>On some devices, the fingerprint sensor can be remapped by Key Mapper. There are generally 3 categories of devices with varying degrees of support for this feature:</p> <ol> <li>Some devices have a fingerprint sensor that can detect directional gestures (up, down, left, right swipes) and your device allows third party apps such as Key Mapper to access and remap these.</li> <li>Some devices have a fingerprint sensor that can detect directional gestures (up, down, left, right swipes) but your device does not allow Key Mapper to access them.</li> <li>Some devices have a fingerprint sensor that is not capable of detecting directional gestures. This generally includes in-screen fingerprint sensors.</li> </ol> <p>If your device falls into categories 2 or 3, you cannot remap fingerprint gestures, and you shouldn't continue with this guide. Even if your device allows for directional fingerprint gestures for system use, they may not allow third party apps such as Key Mapper to access them and therefore there is nothing the developer of Key Mapper can do to help you.</p> <p>If your device supports remapping directional fingerprint gestures, this guide is for you.</p>"},{"location":"user-guide/fingerprint-gestures/#remapping-fingerprint-gestures","title":"Remapping fingerprint gestures","text":"<p>From the Key Mapper home screen, tab the 'Fingerprint' tab.</p> <p>Here you can set actions for the 4 directional gestures. Tapping any one of them will bring you to the action assignment screen for that gesture and by tapping 'Add action' at the bottom of the screen you can assign the action. Click here for an explanation of all the actions you can choose from.</p> <p>After choosing an action (or actions) you can press the save :fontawesome-solid-save: icon in the bottom right to save the mapping.</p> <p>Make sure to save :fontawesome-solid-save: your fingerprint gesture map after applying these changes.</p>"},{"location":"user-guide/fingerprint-gestures/#customising-actions","title":"Customising actions","text":"<p>If you would like to customise how the actions are performed you can tap the 3 dot menu  to the right of an action.</p> <p>On this screen you can choose from the following options:</p> <p> \u00a0 Hold down until swiped again</p> <p>This option allows for keycode actions to be 'held', much like you could hold down a physical keyboard key. The action will continue until the same gesture is performed a second time.</p> <p>\u00a0Delay before next action (ms) </p> <p>Key Mapper 2.2.0+</p> <p>This option takes effect if you have multiple actions in your mapping. The slider sets the amount of time between this action and the next.</p> <p>\u00a0How many times </p> <p>Key Mapper 2.1.0+</p> <p>On Key Mapper 2.2.0 and 2.1.0 this is called \"action count\".</p> <p>This option serves as a multiplier. If this is equal to 5 when your mapping is triggered then your action will be performed 5 times. If this is used with the 'repeat' option then this will perform the action this many times every time it repeats.</p> <p> \u00a0 Repeat until swiped again</p> <p>When this is turned on, Key Mapper will execute your actions repeatedly. This is particularly useful when emulating a keyboard key press, where in most applications holding down the key would result in a repeating output. </p> <p>\u00a0Repeat every... (ms) </p> <p>This option sets the time period for your repeating action. If this is set to 200, your action will repeat every 200ms, or in terms of frequency, 5 times per second. Some people prefer to think about this setting as a repeat rate, commonly measured in 'clicks' per second or cps. To calculate the appropriate time period for this option from a desired frequency, use this equation:</p> <pre><code>Time period (ms) = 1000 / Frequency ('cps')\n</code></pre> <p>\u00a0Repeat limit </p> <p>Key Mapper 2.3.0+</p> <p>Changing this will change how many times the action will repeat. By default this is set to \"no limit\".</p> <p><sup><sub>\u00a0Stop repeating when...</sub> <sup><sub>Swiped again</sub> <sup><sub>Limit reached</sub> <ul> <li> <p>Swiped again. Swiping the fingerprint reader once will be sufficient to start your repeating key map. To stop the key map, you will need to swipe a second time.</p> </li> <li> <p>Limit reached. (Key Mapper 2.3.0+). Your key map will stop repeating once the limit has been reached.</p> </li> </ul> <p>Tap 'Save' to close the menu, preserving changes.</p>"},{"location":"user-guide/fingerprint-gestures/#special-options","title":"Special options","text":"<p>For extra customisation, tap the 'Constraints and more' tab at the top of the screen when editing or creating a gesture map. On this screen you can choose from the following options:</p> <p> \u00a0 Vibrate</p> <p>\u00a0Vibrate duration (ms) </p> <p>Tapping 'Vibrate' will cause your device to vibrate whenever you trigger your mapping. You can change how long your device vibrates with the slider.</p> <p> \u00a0 Show an on-screen message</p> <p>When this is turned on, the following notice will come up at the bottom of the screen when ever you trigger your mapping.</p> <p></p>"},{"location":"user-guide/fingerprint-gestures/#adding-constraints","title":"Adding constraints","text":"<p>Constraints allow you to restrict your mappings to only work in some situations.</p> <p>To add a constraint fron the 'Constraints and more' or 'Options' tab, tap 'Add constraint'.</p> <p>Go here to see how you can configure constraints.</p>"},{"location":"user-guide/key-mapper-keyboard/","title":"Setup a Key Mapper keyboard","text":"<p>On Android the on-screen keyboard that you see when you want to type something is called an 'input method'. Key Mapper uses its own input methods so that it can type stuff or press buttons for you in other apps. You can not use the input method that you are usually using (E.g Gboard or Samsung Keyboard) when you are using some features in Key Mapper (e.g key code actions) since Android only allows one input method to be used at a time.</p> <p>'A Key Mapper keyboard' through out this documentation and the app refers to any input method that works with Key Mapper. There are only 4 right now.</p> <ol> <li> <p>The one built-in to Key Mapper is called the \"Key Mapper Basic Input Method\". This one has NO on-screen keyboard. You won't see a keyboard when you want to type something. This keyboard doesn't support non-English languages! You are not recommended to use this since it is not a proper keyboard.</p> </li> <li> <p>If you want an on-screen keyboard to be available while using Key Mapper or if you need support for non-English languages, you need to install \"Key Mapper GUI Keyboard\". It is available on the Google Play Store, F-Droid and GitHub. This is the recommended input method for Key Mapper.</p> </li> <li> <p>A fork of Hacker's Keyboard that adds support for Key Mapper. Download from GitHub here.</p> </li> <li> <p>A fork of the Android TV keyboard that adds support for Key Mapper. Download from GitHub here.</p> </li> </ol> <p>'Enable a Key Mapper keyboard' means turning on the input method in your device's 'Language &amp; Input' settings. The location of these settings is often called something else.</p> <p>'Use/choose a Key Mapper keyboard' means making the Key Mapper keyboard that you have installed the one that shows up when you want to type something. Multiple ways of doing this are described here. Android allows multiple input methods to be enabled but only one to be used at a time.</p>"},{"location":"user-guide/keymaps/","title":"Key Maps","text":"<p>Refer to the Quick Start Guide for help with creating key maps. This page gives more detail about every option.</p> <p>Make sure to save :fontawesome-solid-save: your key map after applying these changes.</p>"},{"location":"user-guide/keymaps/#trigger","title":"Trigger","text":"<p>A trigger is a combination of keys that must be pressed in a certain way to 'trigger' the key map. A key map can only have one trigger. You can change the order of the keys by holding down on one and then dragging it into a new position.</p> <p>This is the page to create a trigger for a key map.</p> <p></p>"},{"location":"user-guide/keymaps/#trigger-modes","title":"Trigger modes","text":"<p>A trigger with one key doesn't have a mode. Triggers with more than one key can be one of two trigger modes: 'parallel' and 'sequence'. The button for a parallel trigger says 'at the same time' because this is more descriptive. The plus symbol between the keys will change to an arrow if the trigger is a sequence trigger. The developer has called them \"parallel\" triggers because you press it is one word and you press the keys in parallel.</p>"},{"location":"user-guide/keymaps/#parallel","title":"Parallel","text":"<p>You must press the keys down at the same time to trigger the key map and the must be pressed down in the order as displayed from top to bottom. E.g For the trigger screenshot you must press volume up first and then volume down and not the other away around.</p>"},{"location":"user-guide/keymaps/#sequence","title":"Sequence","text":"<p>You must press the keys down and up one after another to trigger the key map in a specified amount of time. This timeout is 1000ms by default and this default can be changed in the app settings. You can change the timeout for a specific key map by going to the options page for the key map as explained further down this page.</p>"},{"location":"user-guide/keymaps/#key-click-type","title":"Key click type","text":"<p>There are 3 click types: short press, long press and double press.</p> <p>Parallel triggers can only be short pressed or long pressed. The click type can be customised for each key in a sequence trigger by pressing on the 3 dot  button on each key.</p>"},{"location":"user-guide/keymaps/#short-press","title":"Short press","text":"<p>This is a simple press of the key and there are no restrictions to how you press it. The key map is triggered when this key is pressed down and doesn't need to be released to activate it. There are no options for this click type.</p>"},{"location":"user-guide/keymaps/#long-press","title":"Long press","text":"<p>You need to hold down the key for at least some amount of time for it to trigger the key map. This is 500ms by default and this default can be changed in the app settings.  You can change the long press delay for all keys in a key map by going to the options page for the key map as explained further down this page.</p>"},{"location":"user-guide/keymaps/#double-press","title":"Double press","text":"<p>You need to press down and release the key in rapid succession for it to trigger the key map. You must do this within 300ms by default and this default can be changed in the app settings.  You can change the double press timeout for all keys in a key map by going to the options page for the key map as explained further down this page.</p>"},{"location":"user-guide/keymaps/#key-device","title":"Key device","text":"<p>Tap the   button on a key so that Key Mapper only detects the key when it comes from a specific device. The default device is 'this device', which means the Android device that you've installed Key Mapper on.</p> <p>External devices are only listed if they are connected to your Android device when you configure the key map. If you have multiple devices with the same name then turn on the setting to show the first 5 characters of the device ID in the app settings. This will help you distinguish between them.</p>"},{"location":"user-guide/keymaps/#key-options","title":"Key options","text":"<p>This menu pops up if you press the 3 dot  button on a key.</p>"},{"location":"user-guide/keymaps/#do-not-remap","title":"Do not remap","text":"<p> \u00a0 Do not override default action</p> <p>This is turned off by default. If this is turned on for a key then the key will still do it's normal thing even though it is remapped. E.g a volume down key with this option will still turn the volume down.</p> <p>This option doesn't remap the trigger key, which means it will continue do its normal thing when clicked as well as your action. This will be automatically</p>"},{"location":"user-guide/keymaps/#click-type","title":"Click type","text":"<p>This will change the click type for a key in a sequence trigger. A parallel trigger key will not have the click type option because all the keys have the same click type. You will find the buttons to change a parallel trigger's click type above the trigger mode buttons as shown in the image at the top of this Trigger section.</p>"},{"location":"user-guide/keymaps/#customising-actions","title":"Customising actions","text":"<p>You can tap the pencil icon  to the right of the action's name to bring up the following menu.</p> <p></p> <p>Here you can customise a lot of the operation of your key map, including timing and multipliers. There are two buttons to 'replace' and 'edit' the action. The 'edit' button isn't shown for all actions because you can't configure what they do.</p> <p>\u00a0Delay before next action (ms) </p> <p>Key Mapper 2.2.0+</p> <p>This option takes effect if you have multiple actions in your mapping. The slider sets the amount of time between this action and the next.</p> <p>\u00a0How many times </p> <p>Key Mapper 2.1.0+</p> <p>On Key Mapper 2.2.0 and 2.1.0 this is called \"action count\".</p> <p>This option serves as a multiplier. If this is equal to 5 when your mapping is triggered then your action will be performed 5 times. If this is used with the 'repeat' option then this will perform the action this many times every time it repeats.</p>"},{"location":"user-guide/keymaps/#repeating-actions","title":"Repeating actions","text":"<p> \u00a0 Repeat</p> <p>When this is turned on, Key Mapper will execute your actions repeatedly. This is particularly useful when emulating a keyboard key press, where in most applications holding down the key would result in a repeating output. The default settings in Key Mapper are designed to emulate that behaviour when 'Repeat' is turned on.</p> <p>\u00a0Repeat every... (ms) </p> <p>This option sets the time period for your repeating action. If this is set to 200, your action will repeat every 200ms, or in terms of frequency, 5 times per second. Some people prefer to think about this setting as a repeat rate, commonly measured in 'clicks' per second or cps. To calculate the appropriate time period for this option from a desired frequency, use this equation:</p> <pre><code>Time period (ms) = 1000 / Frequency ('cps')\n</code></pre> <p>\u00a0Delay until repeat... (ms) </p> <p>This option sets the amount of time between the first action and the second action (or the first repeat). This is part of the keyboard key behaviour simulation. If you want your repeating action to begin straight away, you can make this 0. </p> <p>\u00a0Repeat limit </p> <p>Key Mapper 2.3.0+</p> <p>Changing this will change how many times the action will repeat. By default this is set to \"no limit\".</p> <p><sup><sub>\u00a0Stop repeating when...</sub> <sup><sub>Trigger is released</sub> <sup><sub>Trigger is pressed again</sub> <sup><sub>Limit reached</sub> <ul> <li> <p>Trigger is released. You will need to hold down the trigger in order for the keys to repeat. If you let go of the trigger, the repeating will stop.</p> </li> <li> <p>Trigger is pressed again. Pressing your trigger once will be sufficient to start your repeating key map. To stop the key map, you will need to press the trigger a second time.</p> </li> <li> <p>Limit reached. (Key Mapper 2.3.0+). Your key map will stop repeating once the limit has been reached regardless of whether the trigger is being held down.</p> </li> </ul>"},{"location":"user-guide/keymaps/#hold-down-actions","title":"Hold down actions","text":"<p> \u00a0 Hold down</p> <p>Key Mapper 2.1.0+</p> <p>This setting provides the ability to simulate holding down a key or tapping a coordinate (Android 8.0+). With this turned on (and repeat turned off), the default behaviour is that holding down your trigger will translate to holding down the action, for as long as you hold down the trigger.</p> <p><sup><sub>\u00a0Hold down until trigger is...</sub> <sup><sub>Released</sub> <sup><sub>Pressed again</sub> <p>Key Mapper 2.2.0+</p> <p>This setting allows you to choose from two behaviours. If 'Released' is selected, holding down your trigger key(s) will translate to holding down the action, for as long as you hold down the trigger key(s).</p> <p>If you choose 'Pressed again', pressing your trigger key(s) once will be sufficient to start holding down the action. To stop the key map, you will need to press the trigger key(s) a second time.</p>"},{"location":"user-guide/keymaps/#using-hold-down-and-repeat-together","title":"Using 'Hold down' and 'Repeat' together","text":"<p>Key Mapper 2.2.0+</p> <p>You can use turn on both of these settings to unlock an additional setting. A repeating hold down action behaves like a normal 'Repeat' action in that the action repeats itself with a given frequency. It also behaves like a 'Hold down' action in that each individual action will be held for a certain amount of time in each cycle.</p> <p>\u00a0Hold down duration (ms) </p> <p>This allows you to set how long the action is held down for before repeating.</p>"},{"location":"user-guide/keymaps/#special-options","title":"Special options","text":"<p>There are options for a key map under the 'Options' or 'Constraints and more' tab. Here are explanations of each option.</p>"},{"location":"user-guide/keymaps/#allow-other-apps-to-trigger-this-key-map-230","title":"Allow other apps to trigger this key map (2.3.0+)","text":"<p>This allows you to trigger the key map by using a shortcut or by sending an Intent to Key Mapper. Turning this off will stop any shortcuts or Intents for this key map from working.</p>"},{"location":"user-guide/keymaps/#home-screen-launcher-shortcut","title":"Home screen (launcher) shortcut","text":"<p>You can create a home screen shortcut by tapping \"create launcher shortcut\" or by adding the shortcut to your home screen in the same way as a widget. You can also use this shortcut from automation apps like Tasker and Automate without having to create a home screen shortcut.</p> <p>Note</p> <p>This button will be disabled if your launcher doesn't let 3rd party apps tell it to create shortcuts so you'll have to create it manually.</p>"},{"location":"user-guide/keymaps/#intent","title":"Intent","text":"<p>There are many apps that can automate broadcasting Intents such as Tasker and Automate.</p>"},{"location":"user-guide/keymaps/#intent-action","title":"Intent action","text":"<pre><code>io.github.sds100.keymapper.ACTION_TRIGGER_KEYMAP_BY_UID\n</code></pre>"},{"location":"user-guide/keymaps/#intent-string-extra","title":"Intent string extra","text":"<pre><code>io.github.sds100.keymapper.EXTRA_KEYMAP_UID\n</code></pre> <p>The extra value is the UUID of the key map. You can copy the UUID in Key Mapper by turning on the \"Trigger from other apps\" option.</p>"},{"location":"user-guide/keymaps/#intent-package-name","title":"Intent package name","text":"<p>The component for the intent must be sent so that the intent is sent specifically to Key Mapper and not any other apps. Android enforces this and will not send the intent to Key Mapper if it is not specified. If you are using a .debug or .ci build then add .debug or .ci to the end of the package name below only and not the class name.</p> <pre><code>io.github.sds100.keymapper/io.github.sds100.keymapper.api.TriggerKeyMapsBroadcastReceiver\n</code></pre>"},{"location":"user-guide/keymaps/#adb-command","title":"ADB command","text":"<p>This adb command tests this feature.</p> <pre><code>adb shell am broadcast -n io.github.sds100.keymapper/io.github.sds100.keymapper.api.TriggerKeyMapsBroadcastReceiver -a io.github.sds100.keymapper.ACTION_TRIGGER_KEYMAP_BY_UID --es io.github.sds100.keymapper.EXTRA_KEYMAP_UID $KEYMAP_UID$\n</code></pre> <p> \u00a0 Show an on-screen message</p> <p>When this is turned on, the following notice will come up at the bottom of the screen when ever you trigger your mapping.</p> <p></p> <p>You can have your device vibrate instead of an on-screen message if you want. This option is below.</p> <p> \u00a0 Vibrate</p> <p>\u00a0Vibrate duration (ms) </p> <p>Tapping 'Vibrate' will cause your device to vibrate whenever you trigger your mapping. You can change how long your device vibrates with the slider.</p> <p> \u00a0 Vibrate when keys are initially pressed and again when long pressed</p> <p>This is only shown if the 'at the same time' trigger mode is selected and the trigger needs to be long pressed.</p> <p>This behaves similarly to the on-screen message option above.</p> <p> \u00a0 Detect trigger when screen is off. ROOT only.</p> <p>These are the buttons which can be detected when the screen is off. Let the developer know about any buttons you would also like to be supported.</p> <p>Note</p> <p>Please send the output of pressing the buttons while running the <code>adb shell getevent -lq</code> command so the developer knows which key event name they need to add.</p> <ul> <li>Volume Up</li> <li>Volume Down</li> <li>Headset button</li> <li>Camera focus button</li> <li>Camera button</li> <li>Bixby button - on some ROMs the Bixby button is mapped to the Menu or Assist key code in Android so it will appear as these buttons in the trigger.</li> <li>Search button</li> </ul> <p>\u00a0Long press delay (ms) </p> <p>This is only shown if a trigger has at least one key that needs to long pressed. This option will change for how long these keys need to be held down.</p> <p>\u00a0Double press timeout (ms) </p> <p>This is only shown if a trigger has at least one key that needs to double pressed. This option will change the maximum amount of time that a button needs to be double pressed so that it is detected as a double press.</p> <p>\u00a0Sequence trigger timeout (ms) </p> <p>This is only shown if you've chosen the 'in sequence' trigger mode. This option will change the time limit for how fast you need to complete the trigger.</p>"},{"location":"user-guide/keymaps/#adding-constraints","title":"Adding constraints","text":"<p>Constraints allow you to restrict your mappings to only work in some situations.</p> <p>To add a constraint fron the 'Constraints and more' or 'Options' tab, tap 'Add constraint'.</p> <p>Go here to see how you can configure constraints.</p>"},{"location":"user-guide/oculus/","title":"Installing Keymapper on Oculus Quest v40+ Software","text":""},{"location":"user-guide/oculus/#about","title":"About","text":"<p>The Oculus Quest v40 software broke accessibility permissions for a lot of apps, Key Mapper included. These steps should allow you to use Key Mapper on the Oculus Quest freely. For this, you will need your Quest up and connected to ADB. You will likely need the ADB drivers for the ADB shell to pick it up.</p> <p>https://developer.oculus.com/downloads/package/oculus-adb-drivers/</p>"},{"location":"user-guide/oculus/#enable-accessibility-and-ability-to-modify-system-settings","title":"Enable Accessibility and Ability to Modify System Settings:","text":"<p><pre><code>adb shell settings put secure enabled_accessibility_services io.github.sds100.keymapper/io.github.sds100.keymapper.debug.service.MyAccessibilityService\n</code></pre> <pre><code>adb shell pm grant io.github.sds100.keymapper android.permission.WRITE_SECURE_SETTINGS\n</code></pre></p>"},{"location":"user-guide/oculus/#set-key-mapper-as-device-admin-so-it-cannot-be-overridden","title":"Set Key Mapper as Device Admin so it Cannot Be Overridden:","text":"<pre><code>adb shell dpm set-active-admin --user current io.github.sds100.keymapper/io.github.sds100.keymapper.system.DeviceAdmin\n</code></pre> <p>Uninstalling</p> <p>If you ever wish to uninstall KeyMapper from your Quest after running this command you must run the following command first: <pre><code>adb shell pm disable-user io.github.sds100.keymapper\n</code></pre></p>"},{"location":"user-guide/oculus/#enable-do-not-disturb-permissions","title":"Enable Do Not Disturb Permissions","text":"<pre><code>adb shell cmd notification allow_listener io.github.sds100.keymapper/io.github.sds100.keymapper.system.notifications.NotificationReceiverio.github.sds100.keymapper/io.github.sds100.keymapper.system.notifications.NotificationReceiver\n</code></pre>"},{"location":"user-guide/oculus/#disable-battery-optimisation","title":"Disable Battery Optimisation:","text":"<pre><code>adb shell dumpsys deviceidle whitelist +io.github.sds100.keymapper\n</code></pre>"},{"location":"user-guide/settings/","title":"Settings","text":"<p>Open the Key Mapper settings by opening the menu  at the bottom of the home screen and then tapping Settings.</p>"},{"location":"user-guide/settings/#dark-theme","title":"Dark theme","text":"<p>Should be self explanatory. \ud83c\udf1a</p>"},{"location":"user-guide/settings/#automatically-back-up-mappings","title":"Automatically back up mappings","text":"<p>Tapping this setting will allow to choose a location to automatically back up your mappings to.</p>"},{"location":"user-guide/settings/#hide-home-screen-alerts","title":"Hide home screen alerts","text":"<p>This will hide the alerts at the top of the home screen.</p>"},{"location":"user-guide/settings/#force-vibrate","title":"Force vibrate","text":"<p>This will make all your mappings vibrate when they are triggered</p>"},{"location":"user-guide/settings/#show-the-first-5-characters-of-the-device-id-for-device-specific-triggers","title":"Show the first 5 characters of the device id for device specific triggers","text":"<p>Whenever you see the name of a device in Key Mapper like in your triggers, it will append the first 5 characters of the unique identifier for the device at the end of its name. This is useful because some external devices are reported to Android as multiple devices but have the same name.</p>"},{"location":"user-guide/settings/#pauseresume-mappings-notification","title":"Pause/resume mappings notification","text":"<p>This is a useful notification so you can easily pause and resume your key maps.</p> <p></p>"},{"location":"user-guide/settings/#default-mapping-options","title":"Default mapping options","text":"<p>These settings allow you to change the defaults for these key map options. For example if the 'long press delay' for a key map is set to 'default' changing this setting will affect that key map.</p>"},{"location":"user-guide/settings/#delete-sound-files","title":"Delete sound files","text":"<p>Tapping this will let you delete sound files that are being used by sound actions.</p>"},{"location":"user-guide/settings/#shizuku-support","title":"Shizuku support","text":"<p>Read more about this here.</p>"},{"location":"user-guide/settings/#automatically-change-the-on-screen-keyboard-when-you-start-typing-240","title":"Automatically change the on-screen keyboard when you start typing (2.4.0+)","text":"<p>Attention</p> <p>You must grant Key Mapper WRITE_SECURE_SETTINGS permission for this to notification to be shown. Alternatively on Android 11+ you can just turn on the accessibility service.</p> <p>Your normal keyboard will be automatically selected when you try to start typing and your Key Mapper keyboard will be selected when you close the keyboard.</p>"},{"location":"user-guide/settings/#automatically-change-the-on-screen-keyboard-when-a-device-connectsdisconnects","title":"Automatically change the on-screen keyboard when a device connects/disconnects","text":"<p>Attention</p> <p>You must grant Key Mapper WRITE_SECURE_SETTINGS permission for this to notification to be shown. Alternatively on Android 11+ you can just turn on the accessibility service.</p> <p>Info</p> <p>This is restricted to Bluetooth devices in Key Mapper 2.2.0 and older. After updating to Key Mapper 2.3.0 you will need to set this up again because the data for the Bluetooth devices can't be migrated in a way that the new feature will work.</p> <p>The last used Key Mapper keyboard will be automatically selected when a chosen device is connected. Your normal keyboard will be automatically selected when the device disconnects.</p>"},{"location":"user-guide/settings/#automatically-change-the-on-screen-keyboard-when-toggling-key-maps","title":"Automatically change the on-screen keyboard when toggling key maps","text":"<p>Attention</p> <p>You must grant Key Mapper WRITE_SECURE_SETTINGS permission for this to notification to be shown. Alternatively on Android 11+ you can just turn on the accessibility service.</p> <p>The last used Key Mapper keyboard will be automatically selected when you unpause your key maps. Your normal keyboard will be automatically selected when they are paused.</p>"},{"location":"user-guide/settings/#toggle-key-mapper-keyboard-notification","title":"Toggle Key Mapper keyboard notification","text":"<p>Attention</p> <p>You must grant Key Mapper WRITE_SECURE_SETTINGS permission for this to notification to be shown. Alternatively on Android 11+ you can just turn on the accessibility service.</p> <p>This notification will select the last used Key Mapper keyboard if you are using your normal keyboard and will select your normal keyboard if the Key Mapper keyboard is being used.</p> <p></p>"},{"location":"user-guide/settings/#automatically-show-keyboard-picker-up-to-android-90","title":"Automatically show keyboard picker (up to Android 9.0)","text":"<p>Attention</p> <p>This requires ROOT permission on Android 8.1 and Android 9.0 because Android blocked the ability for apps to show the input method picker when they are running in the background. Android removed the ability to show this even with ROOT on versions later than Android 9.0.</p> <p>Info</p> <p>This is restricted to Bluetooth devices in Key Mapper 2.2.0 and older. After updating to Key Mapper 2.3.0 you will need to set this up again because the data for the Bluetooth devices can't be migrated in a way that the new feature will work.</p> <p>When a device that you have chosen connects or disconnects the keyboard picker will show automatically. Choose the devices below.</p>"},{"location":"user-guide/settings/#key-mapper-has-root-permission","title":"Key Mapper has root permission","text":"<p>Don't turn this on if you don't know what 'rooting' is.</p> <p>Read more here.</p> <p>This setting needs to be turned on for some features in Key Mapper to work. You must grant Key Mapper root permission in your root management app (e.g Magisk, SuperSU) before you turn this on.</p>"},{"location":"user-guide/settings/#fix-keyboards-that-are-set-to-us-english-230-android-11","title":"Fix keyboards that are set to US English (2.3.0+, Android 11+)","text":"<p>Info</p> <p>See the Android 11 bug on Google's issue tracker here.</p> <p>There is a bug in Android 11 that turning on an accessibility service makes Android think all external devices are the same internal virtual device. Because it can\\'t identify these devices correctly, it doesn\\'t know which keyboard layout to use with them so it defaults to US English even if it is a German keyboard for example.</p> <p>Warning</p> <p>This feature will not fix game controllers because joysticks and triggers send motion events and not key events.</p> <p>Steps to work around this bug...</p> <ol> <li>Enable the Key Mapper accessibility service.</li> <li> <p>Open the Key Mapper settings by opening the menu  at the bottom of the home screen and then  tapping Settings.</p> </li> <li> <p>Scroll down to the 'Workaround for Android 11 bug that sets the device id for input events to -1' setting and turn it on.</p> </li> <li>To avoid confusion and headaches read about how input methods work with Key Mapper here.</li> <li>Tap 'Enable the Key Mapper keyboard' and turn on the Key Mapper GUI Keyboard or the Key Mapper Basic Input Method.</li> <li> <p>Tap 'Use the Key Mapper keyboard' and select the keyboard that you just enabled.    It is recommended that you setup the setting to automatically change the on-screen keyboard when the device connects and disconnects. You can find this further up this page. This is useful if you don't want to use one of the Key Mapper keyboards all the time. If you want to change the keyboard manually then see this question in the faq.</p> </li> <li> <p>Connect the device that you want to fix to your Android device.</p> </li> <li>Tap 'Choose devices' and select the devices that should be fixed.</li> <li>Your keyboard layout should be fixed! \ud83c\udf89 If you're having issues checkout the FAQ below or join the Discord server.</li> </ol> <p>Faq</p> <ul> <li>Can I use a non Key Mapper keyboard like Gboard instead? No because Key Mapper isn't allowed to tell other input methods what to type.</li> <li>Can I add support for joysticks and triggers? No because Android doesn't allow apps to input motion events to other apps.</li> </ul>"},{"location":"user-guide/settings/#logging-230","title":"Logging (2.3.0+)","text":"<p>This is very useful for debugging and can be used instead of a bug report. Read about how to send this information to the developer here. Some things like app crashes always save to the log regardless of whether extra logging is turned on.</p> <p>You can find the button to open the log at the bottom of the Key Mapper settings. This is what it looks like.</p> <p></p> <p>Warning</p> <p>Extra logging should only be turned on if you are trying to fix an issue or have been told to by the developer otherwise Key Mapper will use more storage space and your key maps might have higher latency. Turn this off once you have fixed the issue or have gathered the information that you need.</p> <p>Tap on 'View and share log' to be able to see and share the log.</p> <p></p> <p>There are buttons at the bottom of the screen to...</p> <ul> <li>Copy the log to the clipboard.</li> <li>Save the log to a file.</li> <li>Clear the log.</li> <li>Toggle short messages on and off. This only affects the logging screen in the app and doesn't affect how the log is copied or saved.</li> </ul>"},{"location":"user-guide/shizuku/","title":"Shizuku support (2.4.0+, Android 6.0+)","text":"<p>Shizuku is an app that allows other apps to do things that only system apps are allowed to do. This is not the same as rooting, which gives apps and the user ultimate control over the device. Read more about how it works on their website.</p>"},{"location":"user-guide/shizuku/#how-to-set-it-up","title":"How to set it up","text":"<p>Go to the Key Mapper settings -&gt; Shizuku support.</p>"},{"location":"user-guide/shizuku/#benefits","title":"Benefits","text":"<ul> <li>Input key events without having to use one of the Key Mapper keyboards. \ud83e\udd73 You can use the keyboard that you already have such as Gboard for example.</li> <li>\"Move cursor to end\" action without having to use one of the Key Mapper keyboards.</li> <li>\"Open menu\" action should work in more apps than without using Shizuku.</li> <li>Grant Key Mapper WRITE_SECURE_SETTINGS permission without you having to use ADB on a PC/Mac.</li> </ul> <p>More will come in the future. If you want any more features then contact the developer by using one of the social media links at the bottom of the page.</p>"}]}